{"version":3,"file":"static/js/675.0c2dafdd.chunk.js","mappings":"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","sources":["component/pages/StratagyPage.jsx","../node_modules/@mui/material/internal/svg-icons/ArrowDownward.js","../node_modules/@mui/material/TableSortLabel/tableSortLabelClasses.js","../node_modules/@mui/material/TableSortLabel/TableSortLabel.js","component/table/CustomTable.jsx","config/AxiosCofig.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport AdminLayout from \"../layouts/AdminLayout\";\r\nimport { Card } from \"@nextui-org/react\";\r\nimport CustomTable from \"../table/CustomTable\";\r\nimport { IoSearch, IoAddCircleOutline } from \"react-icons/io5\";\r\nimport {\r\n  Typography,\r\n  Box,\r\n  Modal,\r\n  TextField,\r\n  IconButton,\r\n  Button,\r\n  InputAdornment,\r\n  FormControl,\r\n} from \"@mui/material\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport api from \"../../config/AxiosCofig\";\r\nimport {\r\n  Dropdown,\r\n  DropdownTrigger,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n} from \"@nextui-org/react\";\r\nimport { CiMenuKebab } from \"react-icons/ci\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n// Define validation schema\r\nconst StrategySchema = Yup.object().shape({\r\n  strategyName: Yup.string().required(\"Strategy Name is required\"),\r\n});\r\n\r\nconst StratagyPage = () => {\r\n  const [open, setOpen] = useState(false);\r\n  // Used to hold all strategies for the table\r\n  const [strategyData, setStrategyData] = useState([]);\r\n  // Track whether we are editing an existing strategy\r\n  const [editMode, setEditMode] = useState(false);\r\n  // Hold the currently selected strategy (for editing)\r\n  const [selectedStrategy, setSelectedStrategy] = useState(null);\r\n\r\n  const handleOpen = () => {\r\n    setEditMode(false);\r\n    setSelectedStrategy(null);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setEditMode(false);\r\n    setSelectedStrategy(null);\r\n  };\r\n\r\n  const title = [\"Strategy Id\", \"Strategy Name\", \"Action\"];\r\n\r\n  // Function to fetch strategies from the API\r\n  const getStrategyData = async () => {\r\n    try {\r\n      const response = await api.get(\"/getStrategies\");\r\n      console.log(response);\r\n      if (response.status === 200) {\r\n        const formattedData = response.data.map((data) => ({\r\n          \"Strategy Id\": data.id,\r\n          \"Strategy Name\": data.StrategyName?.toUpperCase(),\r\n          Action: (\r\n            <Dropdown>\r\n              <DropdownTrigger>\r\n                <IconButton>\r\n                  <CiMenuKebab />\r\n                </IconButton>\r\n              </DropdownTrigger>\r\n              <DropdownMenu\r\n                aria-label=\"Action event example\"\r\n                onAction={(key) => {\r\n                  if (key === \"Delete\") {\r\n                    deleteStrategy(data.id);\r\n                  } else if (key === \"Edit\") {\r\n                    editStrategy(data);\r\n                  }\r\n                }}\r\n              >\r\n                <DropdownItem key=\"Delete\">Delete</DropdownItem>\r\n                <DropdownItem key=\"Edit\">Edit</DropdownItem>\r\n              </DropdownMenu>\r\n            </Dropdown>\r\n          ),\r\n        }));\r\n        setStrategyData(formattedData);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching strategies:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getStrategyData();\r\n  }, []);\r\n\r\n  // Function to delete a strategy\r\n  const deleteStrategy = async (id) => {\r\n    try {\r\n      const response = await api.delete(`/strategies/${id}`);\r\n      if (response.status === 204) {\r\n        // After deletion, refresh the strategy list\r\n        getStrategyData();\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error deleting strategy:\", error);\r\n    }\r\n  };\r\n\r\n  // Function to initiate editing a strategy\r\n  const editStrategy = (data) => {\r\n    setEditMode(true);\r\n    setSelectedStrategy(data);\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <AdminLayout pageTitle=\"Strategy\" pageSubtitle=\"Manage strategy\">\r\n      <Card className=\"mt-3 p-3\">\r\n        <div className=\"flex mb-2 justify-between\">\r\n          <TextField\r\n            className=\"searchUser\"\r\n            placeholder=\"Search\"\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <IoSearch />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            startIcon={<IoAddCircleOutline />}\r\n            onClick={handleOpen}\r\n          >\r\n            Add Strategy\r\n          </Button>\r\n        </div>\r\n        <CustomTable title={title} tableData={strategyData} />\r\n      </Card>\r\n\r\n      <Modal open={open} onClose={handleClose}>\r\n        <Box\r\n          sx={{\r\n            position: \"absolute\",\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n            width: 400,\r\n            bgcolor: \"background.paper\",\r\n            boxShadow: 24,\r\n            borderRadius: \"1rem\",\r\n            p: 4,\r\n          }}\r\n        >\r\n          <Typography variant=\"h6\" component=\"h2\" mb={2}>\r\n            {editMode ? \"Edit Strategy\" : \"Add Strategy\"}\r\n          </Typography>\r\n          <Formik\r\n            // Set initial values based on edit mode\r\n            \r\n            initialValues={{\r\n              strategyName:\r\n                editMode && selectedStrategy\r\n                  ? selectedStrategy[\"strategyName\"]\r\n                  : \"\",\r\n            }}\r\n            enableReinitialize\r\n            validationSchema={StrategySchema}\r\n            onSubmit={async (values, { resetForm }) => {\r\n\r\n              try {\r\n                if (editMode && selectedStrategy) {\r\n                  // Update API call for editing\r\n                  const response = await api.put(\r\n                    `/strategies/${selectedStrategy[\"id\"]}`,\r\n                    { strategyName: values.strategyName }\r\n                  );\r\n                  if (response.status === 200) {\r\n                    toast.success(\"Strategy updated successfully\");\r\n                    getStrategyData();\r\n                  }\r\n                } else {\r\n                  // Create API call for new strategy\r\n                  const response = await api.post(\"/strategies\", {\r\n                    strategyName: values.strategyName,\r\n                  });\r\n                  if (response.status === 201) {\r\n                    toast.success(\"Strategy created successfully\")\r\n                    getStrategyData();\r\n                  }\r\n                }\r\n              } catch (error) {\r\n                console.error(\"Error saving strategy:\", error);\r\n              }\r\n              resetForm();\r\n              handleClose();\r\n            }}\r\n          >\r\n            {({ errors, touched }) => (\r\n              <Form>\r\n                {console.log(selectedStrategy)}\r\n                <FormControl fullWidth margin=\"normal\">\r\n                  <Field\r\n                    as={TextField}\r\n                    name=\"strategyName\"\r\n                    label=\"Strategy Name\"\r\n                    error={touched.strategyName && Boolean(errors.strategyName)}\r\n                    helperText={touched.strategyName && errors.strategyName}\r\n                  />\r\n                </FormControl>\r\n                <Box mt={2} display=\"flex\" justifyContent=\"flex-end\">\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={handleClose}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                  <Box ml={2} />\r\n                  <Button variant=\"contained\" type=\"submit\">\r\n                    {editMode ? \"Update\" : \"Submit\"}\r\n                  </Button>\r\n                </Box>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </Box>\r\n      </Modal>\r\n    </AdminLayout>\r\n  );\r\n};\r\n\r\nexport default StratagyPage;\r\n","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableSortLabelUtilityClass(slot) {\n  return generateUtilityClass('MuiTableSortLabel', slot);\n}\nconst tableSortLabelClasses = generateUtilityClasses('MuiTableSortLabel', ['root', 'active', 'icon', 'iconDirectionDesc', 'iconDirectionAsc', 'directionDesc', 'directionAsc']);\nexport default tableSortLabelClasses;","'use client';\n\nimport composeClasses from '@mui/utils/composeClasses';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport ButtonBase from \"../ButtonBase/index.js\";\nimport ArrowDownwardIcon from \"../internal/svg-icons/ArrowDownward.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport tableSortLabelClasses, { getTableSortLabelUtilityClass } from \"./tableSortLabelClasses.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    direction,\n    active\n  } = ownerState;\n  const slots = {\n    root: ['root', active && 'active', `direction${capitalize(direction)}`],\n    icon: ['icon', `iconDirection${capitalize(direction)}`]\n  };\n  return composeClasses(slots, getTableSortLabelUtilityClass, classes);\n};\nconst TableSortLabelRoot = styled(ButtonBase, {\n  name: 'MuiTableSortLabel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.active && styles.active];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  cursor: 'pointer',\n  display: 'inline-flex',\n  justifyContent: 'flex-start',\n  flexDirection: 'inherit',\n  alignItems: 'center',\n  '&:focus': {\n    color: (theme.vars || theme).palette.text.secondary\n  },\n  '&:hover': {\n    color: (theme.vars || theme).palette.text.secondary,\n    [`& .${tableSortLabelClasses.icon}`]: {\n      opacity: 0.5\n    }\n  },\n  [`&.${tableSortLabelClasses.active}`]: {\n    color: (theme.vars || theme).palette.text.primary,\n    [`& .${tableSortLabelClasses.icon}`]: {\n      opacity: 1,\n      color: (theme.vars || theme).palette.text.secondary\n    }\n  }\n})));\nconst TableSortLabelIcon = styled('span', {\n  name: 'MuiTableSortLabel',\n  slot: 'Icon',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.icon, styles[`iconDirection${capitalize(ownerState.direction)}`]];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  fontSize: 18,\n  marginRight: 4,\n  marginLeft: 4,\n  opacity: 0,\n  transition: theme.transitions.create(['opacity', 'transform'], {\n    duration: theme.transitions.duration.shorter\n  }),\n  userSelect: 'none',\n  variants: [{\n    props: {\n      direction: 'desc'\n    },\n    style: {\n      transform: 'rotate(0deg)'\n    }\n  }, {\n    props: {\n      direction: 'asc'\n    },\n    style: {\n      transform: 'rotate(180deg)'\n    }\n  }]\n})));\n\n/**\n * A button based label for placing inside `TableCell` for column sorting.\n */\nconst TableSortLabel = /*#__PURE__*/React.forwardRef(function TableSortLabel(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTableSortLabel'\n  });\n  const {\n    active = false,\n    children,\n    className,\n    direction = 'asc',\n    hideSortIcon = false,\n    IconComponent = ArrowDownwardIcon,\n    slots = {},\n    slotProps = {},\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    active,\n    direction,\n    hideSortIcon,\n    IconComponent\n  };\n  const classes = useUtilityClasses(ownerState);\n  const externalForwardedProps = {\n    slots,\n    slotProps\n  };\n  const [RootSlot, rootProps] = useSlot('root', {\n    elementType: TableSortLabelRoot,\n    externalForwardedProps,\n    ownerState,\n    className: clsx(classes.root, className),\n    ref\n  });\n  const [IconSlot, iconProps] = useSlot('icon', {\n    elementType: TableSortLabelIcon,\n    externalForwardedProps,\n    ownerState,\n    className: classes.icon\n  });\n  return /*#__PURE__*/_jsxs(RootSlot, {\n    disableRipple: true,\n    component: \"span\",\n    ...rootProps,\n    ...other,\n    children: [children, hideSortIcon && !active ? null : /*#__PURE__*/_jsx(IconSlot, {\n      as: IconComponent,\n      ...iconProps\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableSortLabel.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the label will have the active styling (should be true for the sorted column).\n   * @default false\n   */\n  active: PropTypes.bool,\n  /**\n   * Label contents, the arrow will be appended automatically.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The current sort direction.\n   * @default 'asc'\n   */\n  direction: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * Hide sort icon when active is false.\n   * @default false\n   */\n  hideSortIcon: PropTypes.bool,\n  /**\n   * Sort icon to use.\n   * @default ArrowDownwardIcon\n   */\n  IconComponent: PropTypes.elementType,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    icon: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    icon: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableSortLabel;","import React, { useState } from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  TableSortLabel,\r\n  CircularProgress,\r\n} from \"@mui/material\";\r\nimport { Button } from \"@nextui-org/react\";\r\n\r\nconst CustomTable = ({\r\n  title = [],\r\n  columnWidths = [],\r\n  tableData = [],\r\n  renderAction,\r\n  loading,\r\n  onRowClick,\r\n}) => {\r\n  const [sortConfig, setSortConfig] = useState({ key: \"\", direction: \"asc\" });\r\n\r\n  const excludedKeys = [\r\n    \"status\",\r\n    \"id\",\r\n    \"brokerId\",\r\n    \"fundAllocated\",\r\n    \"Record Id\",\r\n    \"Gross Fund Interest\",\r\n    \"Gross Fund Sharing\",\r\n    \"Arbitrage Fund Interest\",\r\n    \"Arbitrage Fund Sharing\",\r\n    \"Prop Fund Interest\",\r\n    \"Prop Fund Sharing\",\r\n    \"Cost Per Cr\",\r\n    \"b2pFundsharing\",\r\n    \"b2pFundInterest\",\r\n    \"clientFundSharing\",\r\n    \"clientFundInterest\",\r\n  ];\r\n\r\n  const handleSort = (columnKey) => {\r\n    setSortConfig((prevConfig) => {\r\n      const isAscending =\r\n        prevConfig.key === columnKey && prevConfig.direction === \"asc\";\r\n      return {\r\n        key: columnKey,\r\n        direction: isAscending ? \"desc\" : \"asc\",\r\n      };\r\n    });\r\n  };\r\n\r\n  const sortedData = React.useMemo(() => {\r\n    if (!sortConfig.key) return tableData;\r\n    return [...tableData].sort((a, b) => {\r\n      if (a[sortConfig.key] < b[sortConfig.key]) {\r\n        return sortConfig.direction === \"asc\" ? -1 : 1;\r\n      }\r\n      if (a[sortConfig.key] > b[sortConfig.key]) {\r\n        return sortConfig.direction === \"asc\" ? 1 : -1;\r\n      }\r\n      return 0;\r\n    });\r\n  }, [tableData, sortConfig]);\r\n\r\n  return (\r\n    <Paper className=\"custom\">\r\n      <TableContainer className=\"tble-container\">\r\n        <Table className=\"tble-custom\" stickyHeader>\r\n          <TableHead>\r\n            <TableRow className=\"tble-head\">\r\n              {title\r\n                .filter((header) => !excludedKeys.includes(header))\r\n                .map((header, index) => (\r\n                  <TableCell\r\n                    key={index}\r\n                    align=\"center\"\r\n                    sx={{\r\n                      width: columnWidths[index] || \"auto\",\r\n                      minWidth: columnWidths[index] || 150,\r\n                      maxWidth: columnWidths[index] || 300,\r\n                      position: \"sticky\",\r\n                      top: 0,\r\n                      backgroundColor: \"white\",\r\n                      zIndex: 2,\r\n                    }}\r\n                  >\r\n                    <TableSortLabel\r\n                      active={sortConfig.key === header.toLowerCase()}\r\n                      direction={\r\n                        sortConfig.key === header.toLowerCase()\r\n                          ? sortConfig.direction\r\n                          : \"asc\"\r\n                      }\r\n                      onClick={() => handleSort(header.toLowerCase())}\r\n                    >\r\n                      {header?.toUpperCase()}\r\n                    </TableSortLabel>\r\n                  </TableCell>\r\n                ))}\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n          <TableBody className=\"tble-body\">\r\n            {loading && (\r\n              <TableRow>\r\n                <TableCell colSpan={title.length} className=\"middle-noData\">\r\n                  <CircularProgress />\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n            {sortedData.map((rowData, rowIndex) => (\r\n              <TableRow\r\n                key={rowIndex}\r\n                onClick={() => onRowClick && onRowClick(rowData)}\r\n                sx={{\r\n                  cursor: onRowClick ? \"pointer\" : \"default\",\r\n                  \"&:hover\": onRowClick ? { backgroundColor: \"#f0f0f0\" } : {},\r\n                }}\r\n              >\r\n                {Object.keys(rowData)\r\n                  .filter((key) => !excludedKeys.includes(key)) // Exclude columns\r\n                  .map((key, colIndex) => (\r\n                    <TableCell\r\n                      key={`${rowIndex}-${colIndex}`}\r\n                      align=\"center\"\r\n                      sx={{\r\n                        width: columnWidths[colIndex] || \"auto\",\r\n                        minWidth: columnWidths[colIndex] || 150,\r\n                        maxWidth: columnWidths[colIndex] || 300,\r\n                        whiteSpace: \"nowrap\",\r\n                        overflow: \"hidden\",\r\n                        textOverflow: \"ellipsis\",\r\n                      }}\r\n                    >\r\n                      {key === \"action\" && renderAction ? (\r\n                        <Button\r\n                          isDisabled={rowData[\"status\"] === 3}\r\n                          onPress={(e) => {\r\n                            e.stopPropagation();\r\n                            renderAction(rowData[\"id\"]);\r\n                          }}\r\n                        >\r\n                          {rowData[\"status\"] === 1 ? \"Release\" : \"Released\"}\r\n                        </Button>\r\n                      ) : (\r\n                        rowData[key]\r\n                      )}\r\n                    </TableCell>\r\n                  ))}\r\n              </TableRow>\r\n            ))}\r\n            {!loading && sortedData.length === 0 && (\r\n              <TableRow>\r\n                <TableCell\r\n                  colSpan={title.length}\r\n                  className=\"middle-noData\"\r\n                  align=\"center\"\r\n                >\r\n                  No data found.\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default CustomTable;\r\n","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL:'http://43.204.150.47:8000',\r\n  // baseURL:'http://localhost:8000',\r\n  timeout:5000\r\n})\r\n\r\n\r\napi.interceptors.request.use(\r\n  (config)=>{\r\n    config.headers.Authorization = `Bearer ${localStorage.getItem(\"token\")}`;\r\n    return config;\r\n  },\r\n  (error) => {\r\n    // Handle request error\r\n    console.error(\"Request Interceptor Error:\", error);\r\n    return Promise.reject(error);\r\n  }\r\n)\r\n\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    console.log(\"Response Interceptor: Response received\");\r\n    return response;\r\n  },\r\n  (error) => {\r\n    if (error.response && error.response.status === 401) {\r\n      window.location.href = \"/\";  \r\n      console.error(\"Response Interceptor: Unauthorized access - Redirecting to login\");\r\n    } else {\r\n      console.error(\"Response Interceptor Error:\", error.message);\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api"],"names":["StrategySchema","Yup","shape","strategyName","required","StratagyPage","open","setOpen","useState","strategyData","setStrategyData","editMode","setEditMode","selectedStrategy","setSelectedStrategy","handleClose","getStrategyData","async","response","api","get","console","log","status","formattedData","data","map","_data$StrategyName","id","StrategyName","toUpperCase","Action","_jsxs","Dropdown","children","_jsx","DropdownTrigger","IconButton","CiMenuKebab","DropdownMenu","onAction","key","deleteStrategy","editStrategy","DropdownItem","error","useEffect","delete","concat","AdminLayout","pageTitle","pageSubtitle","Card","className","TextField","placeholder","InputProps","startAdornment","InputAdornment","position","IoSearch","Button","variant","startIcon","IoAddCircleOutline","onClick","handleOpen","CustomTable","title","tableData","Modal","onClose","Box","sx","top","left","transform","width","bgcolor","boxShadow","borderRadius","p","Typography","component","mb","Formik","initialValues","enableReinitialize","validationSchema","onSubmit","values","_ref","resetForm","put","toast","success","post","_ref2","errors","touched","Form","FormControl","fullWidth","margin","Field","as","name","label","Boolean","helperText","mt","display","justifyContent","color","ml","type","createSvgIcon","d","getTableSortLabelUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TableSortLabelRoot","styled","ButtonBase","overridesResolver","props","styles","ownerState","root","active","memoTheme","theme","cursor","flexDirection","alignItems","vars","palette","text","secondary","tableSortLabelClasses","icon","opacity","primary","TableSortLabelIcon","capitalize","direction","fontSize","marginRight","marginLeft","transition","transitions","create","duration","shorter","userSelect","variants","style","React","inProps","ref","useDefaultProps","hideSortIcon","IconComponent","ArrowDownwardIcon","slots","slotProps","other","_objectWithoutProperties","_objectSpread","classes","composeClasses","useUtilityClasses","externalForwardedProps","RootSlot","rootProps","useSlot","elementType","clsx","IconSlot","iconProps","disableRipple","columnWidths","renderAction","loading","onRowClick","sortConfig","setSortConfig","excludedKeys","sortedData","sort","a","b","Paper","TableContainer","Table","stickyHeader","TableHead","TableRow","filter","header","includes","index","TableCell","align","minWidth","maxWidth","backgroundColor","zIndex","TableSortLabel","toLowerCase","handleSort","columnKey","prevConfig","isAscending","TableBody","colSpan","length","CircularProgress","rowData","rowIndex","Object","keys","colIndex","whiteSpace","overflow","textOverflow","isDisabled","onPress","e","stopPropagation","axios","baseURL","timeout","interceptors","request","use","config","headers","Authorization","localStorage","getItem","Promise","reject","window","location","href","message"],"sourceRoot":""}