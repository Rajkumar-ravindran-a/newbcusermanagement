{"version":3,"file":"static/js/556.e96204d0.chunk.js","mappings":"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","sources":["component/Model.jsx","component/pages/DataManagement.jsx","config/AxiosCofig.js","../node_modules/@mui/material/Divider/dividerClasses.js","../node_modules/@mui/material/ListItemIcon/listItemIconClasses.js","../node_modules/@mui/material/ListItemText/listItemTextClasses.js","../node_modules/@mui/material/MenuItem/menuItemClasses.js","../node_modules/@mui/material/MenuItem/MenuItem.js"],"sourcesContent":["import Modal from '@mui/material/Modal';\r\nimport React from 'react'\r\nimport { Box } from '@mui/material';\r\n\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  // width: 400,\r\n  bgcolor: 'background.paper',\r\n  // border: '2px solid #000',\r\n  boxShadow: 24,\r\n  p: 4,\r\n  borderRadius:'1rem'\r\n};\r\n\r\nconst ModelPoper = ({open, handleClose, children}) => {\r\n  return (\r\n    <Modal\r\n    open={open}\r\n    onClose={handleClose}\r\n    aria-labelledby=\"modal-modal-title\"\r\n    aria-describedby=\"modal-modal-description\"\r\n  >\r\n    <Box sx={style}>\r\n     {children}\r\n    </Box>\r\n  </Modal>\r\n  )\r\n}\r\n\r\nexport default ModelPoper","import React, { useEffect, useState } from \"react\";\r\nimport MainPage from \"../layouts/MainPage\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n  Table,\r\n  TableHeader,\r\n  TableColumn,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Pagination,\r\n} from \"@nextui-org/react\";\r\nimport {\r\n  Typography,\r\n  Button,\r\n  TextField,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n  IconButton,\r\n} from \"@mui/material\";\r\nimport ModelPoper from \"../Model\";\r\nimport { toast } from \"react-toastify\";\r\nimport api from \"../../config/AxiosCofig.js\";\r\nimport AdminLayout from \"../layouts/AdminLayout\";\r\nimport { IoMdAddCircleOutline } from \"react-icons/io\";\r\nimport { jwtDecode } from \"jwt-decode\";\r\nimport { CiMenuKebab } from \"react-icons/ci\";\r\nimport {\r\n  Dropdown,\r\n  DropdownTrigger,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n} from \"@nextui-org/react\";\r\n\r\nconst dateConversion = (dateString) => {\r\n  const mysqlDatetime = new Date(dateString)\r\n    .toISOString()\r\n    .slice(0, 19)\r\n    .replace(\"T\", \" \");\r\n  return mysqlDatetime;\r\n};\r\n\r\nconst DataManagement = () => {\r\n  const [tradeData, setTradeData] = useState([]);\r\n  const [brokerData, setBrokerData] = useState([]);\r\n  const [brokerId, setBrokerId] = useState([]);\r\n  const [brokerList, setBrokerList] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [modelPopup, setModelPopup] = useState(false);\r\n  const [strategyData, setStrategyData] = useState([]);\r\n  const [edit, setEdit] = useState(false);\r\n  const [editData, setEditData] = useState(null);\r\n\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  const decode = jwtDecode(token);\r\n\r\n  const fetchTrade = async () => {\r\n    const tradeData = await api.get(\"/getTrade\", {\r\n      headers: {\r\n        Authorization: `bearer ${token}`,\r\n      },\r\n    });\r\n    if (tradeData.status === 200) {\r\n      setTradeData(tradeData.data);\r\n    }\r\n  };\r\n\r\n  const fetchAllBrokers = async () => {\r\n    try {\r\n      const BrokerData = await api.get(\"/getAllBroker?status=1\");\r\n      setBrokerData(BrokerData.data.data);\r\n      // let uniqueArray = BrokerData.data.data\r\n      //   .map((item, index, arr) =>\r\n      //     arr.findIndex((broker) => broker.brokerName === item.brokerName) === index\r\n      //       ? item.brokerName\r\n      //       : null\r\n      //   )\r\n      //   .filter((item) => item !== null);\r\n      setBrokerList(BrokerData.data.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const fetchBrokerById = async (brokerId) => {\r\n    const brokerData = await api.get(`/getIdsByBroker/${brokerId}`);\r\n    console.log(brokerData.data);\r\n    if (brokerData.status === 200) {\r\n      if (brokerData.data.data) {\r\n        setBrokerId(brokerData.data.data);\r\n      } else {\r\n        toast.error(\"No id associated for this user.\");\r\n        setBrokerId([]);\r\n      }\r\n      console.log(brokerData.data, \"in 200\");\r\n    } else if (brokerData?.data?.status_code === 404) {\r\n      toast.error(\"No id associated for this user.\");\r\n      setBrokerId([]);\r\n    } else {\r\n      setBrokerId([]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTrade();\r\n    fetchAllBrokers();\r\n    getStrategyData();\r\n  }, []);\r\n\r\n  const rowsPerPage = 4; // Number of rows per page\r\n  const pages = Math.ceil(tradeData.length / rowsPerPage);\r\n\r\n  const paginatedData = React.useMemo(() => {\r\n    const startIndex = (page - 1) * rowsPerPage;\r\n    const endIndex = startIndex + rowsPerPage;\r\n    return tradeData.slice(startIndex, endIndex);\r\n  }, [page, tradeData]);\r\n\r\n  const handleClose = () => {\r\n    setModelPopup(false);\r\n    setEdit(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(editData);\r\n  }, [editData]);\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    broker: Yup.string().required(\"Broker is required\"),\r\n    tradeId: Yup.string().required(\"ID is required\"),\r\n    strategy: Yup.string().required(\"Strategy is required\"),\r\n    counter: Yup.number()\r\n      .required(\"Counter is required\")\r\n      .positive(\"Must be positive\"),\r\n    buyValue: Yup.number()\r\n      .required(\"Buy Value is required\")\r\n      .positive(\"Must be positive\"),\r\n    sellValue: Yup.number().required(\"Sell Value is required\"),\r\n    dealer: Yup.string().required(\"Dealer is required\"),\r\n    pl: Yup.number().required(\"P/L is required\"),\r\n  });\r\n\r\n  let initialValues = edit\r\n    ? {\r\n        id: editData.id,\r\n        Date: new Date(editData.Date),\r\n        broker: editData.broker || null,\r\n        brokerId:  editData.brokerId || null,\r\n        tradeId: editData.tradeId  || null,\r\n        strategy: editData.strategy || null,\r\n        counter: editData.counter || null,\r\n        buyValue: editData.buyValue || null,\r\n        sellValue: editData.sellValue || null,\r\n        dealer: decode.fullName || null,\r\n        pl: editData.pl || 0,\r\n      }\r\n    : {\r\n        Date: new Date(),\r\n        broker: \"\",\r\n        brokerId: null,\r\n        tradeId: null,\r\n        strategy: \"\",\r\n        counter: \"\",\r\n        buyValue: \"\",\r\n        sellValue: \"\",\r\n        dealer: decode.fullName,\r\n        pl: 0,\r\n      };\r\n\r\n  const editDataFunction = async (value) => {\r\n    setModelPopup(true);\r\n    setEditData(value);\r\n    initialValues.brokerId = fetchBrokerById(value.brokerId);\r\n  };\r\n\r\n  const handleDelete = async (value) => {\r\n    try {\r\n      const response = await api.delete(`/delete_trade/${value.id}`);\r\n      if (response.status === 200) {\r\n        fetchTrade();\r\n        toast.success(\"Data deleted successfully\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error deleting data:\", error);\r\n    }\r\n  }\r\n\r\n  const getStrategyData = async () => {\r\n    try {\r\n      const response = await api.get(\"/getStrategies\");\r\n      console.log(response);\r\n      if (response.status === 200) {\r\n        const formattedData = response.data.map((data) => ({\r\n          \"Strategy Id\": data.id,\r\n          \"Strategy Name\": data.StrategyName,\r\n        }));\r\n        setStrategyData(formattedData);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching strategies:\", error);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (values) => {\r\n    const submissionData = {\r\n      ...values,\r\n      Date: values.Date ? dateConversion(values.Date) : null,\r\n    };\r\n    if(!edit){\r\n      let SubmitData = await api.post(\"/create_trade\", submissionData);\r\n      if (SubmitData.status === 200) {\r\n        fetchTrade();\r\n        toast.success(\"Data added successfully\");\r\n        handleClose();\r\n        setBrokerId([]);\r\n      }\r\n    }\r\n    else{\r\n      let SubmitData = await api.put(`/update_trade/${submissionData.id}`, submissionData);\r\n      if (SubmitData.status === 200) {\r\n        fetchTrade();\r\n        toast.success(\"Data Updated successfully\");\r\n        handleClose();\r\n        setBrokerId([]);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AdminLayout pageTitle=\"Data Management\" pageSubtitle=\"Enter trade datas\">\r\n      <ModelPoper open={modelPopup} handleClose={handleClose}>\r\n        <Typography variant=\"h6\" className=\"mb-2\">\r\n          Add Data\r\n        </Typography>\r\n        <Formik\r\n          initialValues={initialValues}\r\n          validationSchema={validationSchema}\r\n          onSubmit={handleSubmit}\r\n        >\r\n          {({ values, errors, touched, setFieldValue }) => {\r\n            // Function to calculate P/L\r\n            const calculatePL = (buyValue, sellValue) => sellValue - buyValue;\r\n            return (\r\n              <Form>\r\n                <div className=\"flex gap-3 mb-3\">\r\n                  <FormControl fullWidth>\r\n                    <InputLabel>Broker</InputLabel>\r\n                    <Select\r\n                      name=\"broker\"\r\n                      value={values.brokerId} // Store only brokerId\r\n                      label=\"Broker\"\r\n                      onChange={(e) => {\r\n                        const selectedBroker = brokerList.find(\r\n                          (b) => b.id === e.target.value\r\n                        );\r\n                        setFieldValue(\"brokerId\", selectedBroker?.id || \"\");\r\n                        setFieldValue(\r\n                          \"broker\",\r\n                          selectedBroker?.brokerName || \"\"\r\n                        );\r\n                        fetchBrokerById(selectedBroker?.id);\r\n                      }}\r\n                      error={touched.broker && Boolean(errors.broker)}\r\n                    >\r\n                      {brokerList.map((value) => (\r\n                        <MenuItem key={value.id} value={value.id}>\r\n                          {value.brokerName}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                  <FormControl fullWidth>\r\n                    <InputLabel>ID</InputLabel>\r\n                    <Select\r\n                      name=\"tradeId\"\r\n                      label=\"Id\"\r\n                      value={values.tradeId}\r\n                      onChange={(e) => setFieldValue(\"tradeId\", e.target.value)}\r\n                      error={touched.tradeId && Boolean(errors.tradeId)}\r\n                    >\r\n                      {brokerId.map((value, index) => (\r\n                        <MenuItem key={index} value={value.idNumber}>\r\n                          {value.idNumber}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                </div>\r\n                <div className=\"flex gap-2 mb-3\">\r\n                  <TextField\r\n                    fullWidth\r\n                    name=\"dealer\"\r\n                    label=\"Dealer\"\r\n                    value={values.dealer}\r\n                    onChange={(e) => setFieldValue(\"dealer\", e.target.value)}\r\n                    error={touched.dealer && Boolean(errors.dealer)}\r\n                    helperText={touched.dealer && errors.dealer}\r\n                    disabled\r\n                  />\r\n                  <FormControl fullWidth>\r\n                    <InputLabel>Strategy</InputLabel>\r\n                    <Select\r\n                      name=\"strategy\"\r\n                      label=\"Strategy\"\r\n                      value={values.strategy}\r\n                      onChange={(e) =>\r\n                        setFieldValue(\"strategy\", e.target.value)\r\n                      }\r\n                      error={touched.strategy && Boolean(errors.strategy)}\r\n                    >\r\n                      {strategyData.map((value) => (\r\n                        <MenuItem\r\n                          key={value[\"Strategy Name\"]}\r\n                          value={value[\"Strategy Name\"]}\r\n                        >\r\n                          {value[\"Strategy Name\"]?.toUpperCase()}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                  <TextField\r\n                    fullWidth\r\n                    name=\"counter\"\r\n                    label=\"Margin\"\r\n                    value={values.counter}\r\n                    onChange={(e) => setFieldValue(\"counter\", e.target.value)}\r\n                    error={touched.counter && Boolean(errors.counter)}\r\n                    helperText={touched.counter && errors.counter}\r\n                  />\r\n                </div>\r\n                <div className=\"flex gap-3 mb-3\">\r\n                  <TextField\r\n                    fullWidth\r\n                    name=\"buyValue\"\r\n                    label=\"Buy Value\"\r\n                    value={values.buyValue}\r\n                    type=\"number\"\r\n                    onChange={(e) => {\r\n                      setFieldValue(\"buyValue\", e.target.value);\r\n                      setFieldValue(\r\n                        \"pl\",\r\n                        calculatePL(e.target.value, values.sellValue)\r\n                      );\r\n                    }}\r\n                    error={touched.buyValue && Boolean(errors.buyValue)}\r\n                    helperText={touched.buyValue && errors.buyValue}\r\n                  />\r\n                  <TextField\r\n                    fullWidth\r\n                    name=\"sellValue\"\r\n                    label=\"Sell Value\"\r\n                    type=\"number\"\r\n                    value={values.sellValue}\r\n                    onChange={(e) => {\r\n                      setFieldValue(\"sellValue\", e.target.value);\r\n                      setFieldValue(\r\n                        \"pl\",\r\n                        calculatePL(values.buyValue, e.target.value)\r\n                      );\r\n                    }}\r\n                    error={touched.sellValue && Boolean(errors.sellValue)}\r\n                    helperText={touched.sellValue && errors.sellValue}\r\n                  />\r\n                  <TextField\r\n                    fullWidth\r\n                    name=\"pl\"\r\n                    label=\"P/L\"\r\n                    value={values.pl}\r\n                    error={touched.pl && Boolean(errors.pl)}\r\n                    helperText={touched.pl && errors.pl}\r\n                    disabled\r\n                  />\r\n                </div>\r\n                <div className=\"flex justify-end gap-3\">\r\n                  <Button variant=\"contained\" type=\"submit\">\r\n                    Submit Data\r\n                  </Button>\r\n                  <Button variant=\"outlined\" onClick={handleClose}>\r\n                    Cancel\r\n                  </Button>\r\n                </div>\r\n              </Form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      </ModelPoper>\r\n      <div className=\"w-full\">\r\n        <div className=\"flex justify-between flex-row-reverse\">\r\n          <Button\r\n            variant=\"contained\"\r\n            className=\"mb-3 mt-3\"\r\n            startIcon={<IoMdAddCircleOutline />}\r\n            onClick={() => setModelPopup(true)}\r\n          >\r\n            Submit Data\r\n          </Button>\r\n        </div>\r\n\r\n        <Table\r\n          aria-label=\"Example table with client-side pagination\"\r\n          bottomContent={\r\n            <div className=\"flex w-full justify-center\">\r\n              <Pagination\r\n                isCompact\r\n                showControls\r\n                showShadow\r\n                color=\"secondary\"\r\n                page={page}\r\n                total={pages}\r\n                onChange={(newPage) => setPage(newPage)}\r\n              />\r\n            </div>\r\n          }\r\n        >\r\n          <TableHeader>\r\n            <TableColumn>Broker Name</TableColumn>\r\n            <TableColumn>Trade ID</TableColumn>\r\n            <TableColumn>Dealer</TableColumn>\r\n            <TableColumn>Buy Value</TableColumn>\r\n            <TableColumn>Sell Value</TableColumn>\r\n            <TableColumn>Strategy</TableColumn>\r\n            <TableColumn>P/L</TableColumn>\r\n            <TableColumn>Date</TableColumn>\r\n            <TableColumn>Actions</TableColumn>\r\n          </TableHeader>\r\n          <TableBody>\r\n            {paginatedData.map((value, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell>{value.broker?.toUpperCase()}</TableCell>\r\n                <TableCell>{value.tradeId?.toUpperCase()}</TableCell>\r\n                <TableCell>{value.dealer?.toUpperCase()}</TableCell>\r\n                <TableCell>{value.buyValue}</TableCell>\r\n                <TableCell>{value.sellValue}</TableCell>\r\n                <TableCell>{value.strategy?.toUpperCase()}</TableCell>\r\n                <TableCell>{value.sellValue - value.buyValue}</TableCell>\r\n                <TableCell>{value.Date?.toUpperCase()}</TableCell>\r\n                <TableCell>\r\n                  <Dropdown>\r\n                    <DropdownTrigger>\r\n                      <IconButton>\r\n                        <CiMenuKebab />\r\n                      </IconButton>\r\n                    </DropdownTrigger>\r\n                    <DropdownMenu\r\n                      aria-label=\"Action event example\"\r\n                      onAction={(key) => {\r\n                        if (key === \"delete\") {\r\n                          handleDelete(value)\r\n                        } else if (key === \"edit\") {\r\n                          editDataFunction(value);\r\n                          setEdit(true);\r\n                        }\r\n                      }}\r\n                    >\r\n                      <DropdownItem\r\n                        key=\"delete\"\r\n                        isDisabled={value.status === 3}\r\n                      >\r\n                        Delete\r\n                      </DropdownItem>\r\n                      <DropdownItem key=\"edit\" isDisabled={value.status === 3}>\r\n                        Edit\r\n                      </DropdownItem>\r\n                    </DropdownMenu>\r\n                  </Dropdown>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </div>\r\n    </AdminLayout>\r\n  );\r\n};\r\n\r\nexport default DataManagement;\r\n","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL:'http://43.204.150.47:8000',\r\n  // baseURL:'http://localhost:8000',\r\n  timeout:5000\r\n})\r\n\r\n\r\napi.interceptors.request.use(\r\n  (config)=>{\r\n    config.headers.Authorization = `Bearer ${localStorage.getItem(\"token\")}`;\r\n    return config;\r\n  },\r\n  (error) => {\r\n    // Handle request error\r\n    console.error(\"Request Interceptor Error:\", error);\r\n    return Promise.reject(error);\r\n  }\r\n)\r\n\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    console.log(\"Response Interceptor: Response received\");\r\n    return response;\r\n  },\r\n  (error) => {\r\n    if (error.response && error.response.status === 401) {\r\n      window.location.href = \"/\";  \r\n      console.error(\"Response Interceptor: Unauthorized access - Redirecting to login\");\r\n    } else {\r\n      console.error(\"Response Interceptor Error:\", error.message);\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getDividerUtilityClass(slot) {\n  return generateUtilityClass('MuiDivider', slot);\n}\nconst dividerClasses = generateUtilityClasses('MuiDivider', ['root', 'absolute', 'fullWidth', 'inset', 'middle', 'flexItem', 'light', 'vertical', 'withChildren', 'withChildrenVertical', 'textAlignRight', 'textAlignLeft', 'wrapper', 'wrapperVertical']);\nexport default dividerClasses;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getListItemIconUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemIcon', slot);\n}\nconst listItemIconClasses = generateUtilityClasses('MuiListItemIcon', ['root', 'alignItemsFlexStart']);\nexport default listItemIconClasses;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getListItemTextUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemText', slot);\n}\nconst listItemTextClasses = generateUtilityClasses('MuiListItemText', ['root', 'multiline', 'dense', 'inset', 'primary', 'secondary']);\nexport default listItemTextClasses;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getMenuItemUtilityClass(slot) {\n  return generateUtilityClass('MuiMenuItem', slot);\n}\nconst menuItemClasses = generateUtilityClasses('MuiMenuItem', ['root', 'focusVisible', 'dense', 'disabled', 'divider', 'gutters', 'selected']);\nexport default menuItemClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport rootShouldForwardProp from \"../styles/rootShouldForwardProp.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport ListContext from \"../List/ListContext.js\";\nimport ButtonBase from \"../ButtonBase/index.js\";\nimport useEnhancedEffect from \"../utils/useEnhancedEffect.js\";\nimport useForkRef from \"../utils/useForkRef.js\";\nimport { dividerClasses } from \"../Divider/index.js\";\nimport { listItemIconClasses } from \"../ListItemIcon/index.js\";\nimport { listItemTextClasses } from \"../ListItemText/index.js\";\nimport menuItemClasses, { getMenuItemUtilityClass } from \"./menuItemClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, ownerState.dense && styles.dense, ownerState.divider && styles.divider, !ownerState.disableGutters && styles.gutters];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    disabled,\n    dense,\n    divider,\n    disableGutters,\n    selected,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', dense && 'dense', disabled && 'disabled', !disableGutters && 'gutters', divider && 'divider', selected && 'selected']\n  };\n  const composedClasses = composeClasses(slots, getMenuItemUtilityClass, classes);\n  return {\n    ...classes,\n    ...composedClasses\n  };\n};\nconst MenuItemRoot = styled(ButtonBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiMenuItem',\n  slot: 'Root',\n  overridesResolver\n})(memoTheme(({\n  theme\n}) => ({\n  ...theme.typography.body1,\n  display: 'flex',\n  justifyContent: 'flex-start',\n  alignItems: 'center',\n  position: 'relative',\n  textDecoration: 'none',\n  minHeight: 48,\n  paddingTop: 6,\n  paddingBottom: 6,\n  boxSizing: 'border-box',\n  whiteSpace: 'nowrap',\n  '&:hover': {\n    textDecoration: 'none',\n    backgroundColor: (theme.vars || theme).palette.action.hover,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  },\n  [`&.${menuItemClasses.selected}`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    [`&.${menuItemClasses.focusVisible}`]: {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  },\n  [`&.${menuItemClasses.selected}:hover`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n    }\n  },\n  [`&.${menuItemClasses.focusVisible}`]: {\n    backgroundColor: (theme.vars || theme).palette.action.focus\n  },\n  [`&.${menuItemClasses.disabled}`]: {\n    opacity: (theme.vars || theme).palette.action.disabledOpacity\n  },\n  [`& + .${dividerClasses.root}`]: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  [`& + .${dividerClasses.inset}`]: {\n    marginLeft: 52\n  },\n  [`& .${listItemTextClasses.root}`]: {\n    marginTop: 0,\n    marginBottom: 0\n  },\n  [`& .${listItemTextClasses.inset}`]: {\n    paddingLeft: 36\n  },\n  [`& .${listItemIconClasses.root}`]: {\n    minWidth: 36\n  },\n  variants: [{\n    props: ({\n      ownerState\n    }) => !ownerState.disableGutters,\n    style: {\n      paddingLeft: 16,\n      paddingRight: 16\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.divider,\n    style: {\n      borderBottom: `1px solid ${(theme.vars || theme).palette.divider}`,\n      backgroundClip: 'padding-box'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => !ownerState.dense,\n    style: {\n      [theme.breakpoints.up('sm')]: {\n        minHeight: 'auto'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.dense,\n    style: {\n      minHeight: 32,\n      // https://m2.material.io/components/menus#specs > Dense\n      paddingTop: 4,\n      paddingBottom: 4,\n      ...theme.typography.body2,\n      [`& .${listItemIconClasses.root} svg`]: {\n        fontSize: '1.25rem'\n      }\n    }\n  }]\n})));\nconst MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiMenuItem'\n  });\n  const {\n    autoFocus = false,\n    component = 'li',\n    dense = false,\n    divider = false,\n    disableGutters = false,\n    focusVisibleClassName,\n    role = 'menuitem',\n    tabIndex: tabIndexProp,\n    className,\n    ...other\n  } = props;\n  const context = React.useContext(ListContext);\n  const childContext = React.useMemo(() => ({\n    dense: dense || context.dense || false,\n    disableGutters\n  }), [context.dense, dense, disableGutters]);\n  const menuItemRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (autoFocus) {\n      if (menuItemRef.current) {\n        menuItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error('MUI: Unable to set focus to a MenuItem whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n  const ownerState = {\n    ...props,\n    dense: childContext.dense,\n    divider,\n    disableGutters\n  };\n  const classes = useUtilityClasses(props);\n  const handleRef = useForkRef(menuItemRef, ref);\n  let tabIndex;\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n  return /*#__PURE__*/_jsx(ListContext.Provider, {\n    value: childContext,\n    children: /*#__PURE__*/_jsx(MenuItemRoot, {\n      ref: handleRef,\n      role: role,\n      tabIndex: tabIndex,\n      component: component,\n      focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n      className: clsx(classes.root, className),\n      ...other,\n      ownerState: ownerState,\n      classes: classes\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the list item is focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input is used.\n   * The prop defaults to the value inherited from the parent Menu component.\n   * @default false\n   */\n  dense: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * If `true`, a 1px light border is added to the bottom of the menu item.\n   * @default false\n   */\n  divider: PropTypes.bool,\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n  /**\n   * @ignore\n   */\n  role: PropTypes /* @typescript-to-proptypes-ignore */.string,\n  /**\n   * If `true`, the component is selected.\n   * @default false\n   */\n  selected: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * @default 0\n   */\n  tabIndex: PropTypes.number\n} : void 0;\nexport default MenuItem;"],"names":["style","position","top","left","transform","bgcolor","boxShadow","p","borderRadius","_ref","open","handleClose","children","_jsx","Modal","onClose","Box","sx","DataManagement","tradeData","setTradeData","useState","brokerData","setBrokerData","brokerId","setBrokerId","brokerList","setBrokerList","page","setPage","modelPopup","setModelPopup","strategyData","setStrategyData","edit","setEdit","editData","setEditData","token","localStorage","getItem","decode","jwtDecode","fetchTrade","async","api","get","headers","Authorization","concat","status","data","fetchBrokerById","_brokerData$data","console","log","toast","error","status_code","useEffect","BrokerData","fetchAllBrokers","getStrategyData","pages","Math","ceil","length","paginatedData","React","startIndex","endIndex","slice","validationSchema","Yup","shape","broker","required","tradeId","strategy","counter","positive","buyValue","sellValue","dealer","pl","initialValues","id","Date","fullName","response","formattedData","map","StrategyName","_jsxs","AdminLayout","pageTitle","pageSubtitle","ModelPoper","Typography","variant","className","Formik","onSubmit","submissionData","_objectSpread","values","dateString","toISOString","replace","put","success","post","errors","touched","setFieldValue","calculatePL","Form","FormControl","fullWidth","InputLabel","Select","name","value","label","onChange","e","selectedBroker","find","b","target","brokerName","Boolean","MenuItem","index","idNumber","TextField","helperText","disabled","_value$StrategyName","toUpperCase","type","Button","onClick","startIcon","IoMdAddCircleOutline","Table","bottomContent","Pagination","isCompact","showControls","showShadow","color","total","newPage","TableHeader","TableColumn","TableBody","_value$broker","_value$tradeId","_value$dealer","_value$strategy","_value$Date","TableRow","TableCell","Dropdown","DropdownTrigger","IconButton","CiMenuKebab","DropdownMenu","onAction","key","delete","handleDelete","editDataFunction","DropdownItem","isDisabled","axios","create","baseURL","timeout","interceptors","request","use","config","Promise","reject","window","location","href","message","generateUtilityClasses","getMenuItemUtilityClass","slot","generateUtilityClass","_excluded","MenuItemRoot","styled","ButtonBase","shouldForwardProp","prop","rootShouldForwardProp","overridesResolver","props","styles","ownerState","root","dense","divider","disableGutters","gutters","memoTheme","theme","typography","body1","display","justifyContent","alignItems","textDecoration","minHeight","paddingTop","paddingBottom","boxSizing","whiteSpace","backgroundColor","vars","palette","action","hover","menuItemClasses","selected","primary","mainChannel","selectedOpacity","alpha","main","focusVisible","focusOpacity","hoverOpacity","focus","opacity","disabledOpacity","dividerClasses","marginTop","spacing","marginBottom","inset","marginLeft","listItemTextClasses","paddingLeft","listItemIconClasses","minWidth","variants","_ref2","paddingRight","_ref3","borderBottom","backgroundClip","_ref4","breakpoints","up","_ref5","body2","fontSize","inProps","ref","useDefaultProps","autoFocus","component","focusVisibleClassName","role","tabIndex","tabIndexProp","other","_objectWithoutProperties","context","ListContext","childContext","menuItemRef","useEnhancedEffect","current","classes","slots","composedClasses","composeClasses","useUtilityClasses","handleRef","useForkRef","undefined","Provider","clsx"],"sourceRoot":""}