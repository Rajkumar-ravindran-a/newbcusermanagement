{"version":3,"file":"static/js/228.a46199bc.chunk.js","mappings":"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","sources":["component/pages/AuthPage.jsx","config/AxiosCofig.js"],"sourcesContent":["import React from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport landingImage from \"../../assets/rb_2744.png\";\r\nimport { TextField, Button, Typography } from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {jwtDecode} from 'jwt-decode';\r\nimport { toast } from \"react-toastify\";\r\nimport api from \"../../config/AxiosCofig\";\r\n\r\nconst AuthPage = () => {\r\n  // Form validation schema using Yup\r\n  const navigate = useNavigate()\r\n  const validationSchema = Yup.object({\r\n    username: Yup.string().required(\"Username is required\"),\r\n    password: Yup.string().required(\"Password is required\"),\r\n  });\r\n\r\n  // Formik hook\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      username: \"\",\r\n      password: \"\",\r\n    },\r\n    validationSchema,\r\n    onSubmit: async (values) => {\r\n      try{\r\n        const authData = await api.post(\"/login\", values, {\r\n          headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\r\n        });\r\n        \r\n        if(authData.status===200){\r\n          localStorage.setItem('token', authData.data.access_token)\r\n          const tokenDecode = jwtDecode(authData.data.access_token);\r\n          if(tokenDecode.role===1){\r\n            navigate(\"/home\")\r\n          }\r\n          else if(tokenDecode.role===2){\r\n            navigate(\"/datamanagement\")\r\n          }\r\n          \r\n        }\r\n      }\r\n      catch(errors){\r\n        console.log(\"authData\", errors)\r\n        toast.error(errors?.response?.data?.detail)\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div className=\"authmain flex flex-row items-center\">\r\n      <div className=\"image-container\">\r\n        <img src={landingImage} alt=\"Login\" />\r\n      </div>\r\n      <div className=\"form-container\">\r\n        <div className=\"login-form-container\">\r\n          <Typography variant=\"h4\">Login</Typography>\r\n          <form onSubmit={formik.handleSubmit}>\r\n            <TextField\r\n              name=\"username\"\r\n              value={formik.values.username}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              placeholder=\"Username\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              margin=\"normal\"\r\n              className=\"input-field\"\r\n              error={formik.touched.username && Boolean(formik.errors.username)}\r\n              helperText={formik.touched.username && formik.errors.username}\r\n            />\r\n            <TextField\r\n              name=\"password\"\r\n              type=\"password\"\r\n              value={formik.values.password}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              placeholder=\"Password\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              margin=\"normal\"\r\n              className=\"input-field\"\r\n              error={formik.touched.password && Boolean(formik.errors.password)}\r\n              helperText={formik.touched.password && formik.errors.password}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              fullWidth\r\n              className=\"login-btn\"\r\n            >\r\n              Login\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthPage;\r\n","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL:'http://43.204.150.47:8000',\r\n  // baseURL:'http://localhost:8000',\r\n  timeout:5000\r\n})\r\n\r\n\r\napi.interceptors.request.use(\r\n  (config)=>{\r\n    config.headers.Authorization = `Bearer ${localStorage.getItem(\"token\")}`;\r\n    return config;\r\n  },\r\n  (error) => {\r\n    // Handle request error\r\n    console.error(\"Request Interceptor Error:\", error);\r\n    return Promise.reject(error);\r\n  }\r\n)\r\n\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    console.log(\"Response Interceptor: Response received\");\r\n    return response;\r\n  },\r\n  (error) => {\r\n    if (error.response && error.response.status === 401) {\r\n      console.error(\"Response Interceptor: Unauthorized access - Redirecting to login\");\r\n    } else {\r\n      console.error(\"Response Interceptor Error:\", error.message);\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api"],"names":["AuthPage","navigate","useNavigate","validationSchema","Yup","username","required","password","formik","useFormik","initialValues","onSubmit","async","authData","api","post","values","headers","status","localStorage","setItem","data","access_token","tokenDecode","jwtDecode","role","errors","_errors$response","_errors$response$data","console","log","toast","error","response","detail","_jsxs","className","children","_jsx","src","landingImage","alt","Typography","variant","handleSubmit","TextField","name","value","onChange","handleChange","onBlur","handleBlur","placeholder","fullWidth","margin","touched","Boolean","helperText","type","Button","color","axios","create","baseURL","timeout","interceptors","request","use","config","Authorization","concat","getItem","Promise","reject","message"],"sourceRoot":""}