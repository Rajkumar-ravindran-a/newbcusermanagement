{"version":3,"file":"static/js/58.87809ecb.chunk.js","mappings":"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","sources":["component/sideNavbar/SideNavbar.jsx","component/layouts/MainPage.jsx","component/pages/HomePage.jsx","config/AxiosCofig.js","../node_modules/react-transition-group/esm/config.js","../node_modules/react-transition-group/esm/Transition.js","../node_modules/react-transition-group/esm/utils/reflow.js"],"sourcesContent":["import React from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nconst SideNavbar = () => {\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    window.location.href = \"/\";\r\n  };\r\n  return (\r\n    <Navbar expand=\"lg\" className=\"bg-body-tertiary\">\r\n      <Container>\r\n        <Navbar.Brand href=\"#home\">Bulls Catch</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        {/* <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"me-auto\">\r\n            <Nav.Link href=\"#home\">Home</Nav.Link>\r\n            {/* <Nav.Link href=\"#link\">Link</Nav.Link>\r\n            <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n              <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n              <NavDropdown.Item href=\"#action/3.2\">\r\n                Another action\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n              <NavDropdown.Divider />\r\n              <NavDropdown.Item href=\"#action/3.4\">\r\n                Separated link\r\n              </NavDropdown.Item>\r\n            </NavDropdown> */}\r\n          {/* </Nav> */}\r\n        {/* </Navbar.Collapse> */}\r\n        <div className=\"d-flex\">\r\n        <Button variant=\"outline-danger\" onClick={handleLogout}>Logout</Button>\r\n        </div>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default SideNavbar;\r\n","import React from \"react\";\r\nimport SideNavbar from \"../sideNavbar/SideNavbar\";\r\n\r\nconst MainPage = ({children}) => {\r\n  return (\r\n    <div className=\"layout-main\">\r\n      <SideNavbar />\r\n      <div className=\"flex flex-1 p-4\">\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Card } from \"@nextui-org/react\";\r\nimport MainPage from \"../layouts/MainPage\";\r\nimport {\r\n  Table,\r\n  TableHeader,\r\n  TableColumn,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Pagination,\r\n  Input,\r\n  Select,\r\n  SelectItem,\r\n} from \"@nextui-org/react\";\r\nimport axios from \"axios\";\r\nimport { Typography } from \"@mui/material\";\r\nimport AdminLayout from \"../layouts/AdminLayout\";\r\nimport api from \"../../config/AxiosCofig\"\r\n\r\nconst HomePage = () => {\r\n  const [tradeData, setTradeData] = useState([]);\r\n  const token = localStorage.getItem(\"token\");\r\n  const [userData, setUserData] = useState([]);\r\n\r\n  const getAllUsers = async () => {\r\n    const allusers = await api.get(\"/users\", {\r\n      headers: {\r\n        Authorization: `bearer ${token}`,\r\n      },\r\n    });\r\n    if (allusers.status === 200) {\r\n      setUserData(allusers.data);\r\n    }\r\n  };\r\n\r\n  const fetchTrade = async () => {\r\n    const tradeData = await api.get(\"/getAllTrade\", {\r\n      headers: {\r\n        Authorization: `bearer ${token}`,\r\n      },\r\n    });\r\n    if (tradeData.status === 200) {\r\n      setTradeData(tradeData.data);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTrade();\r\n    getAllUsers();\r\n  }, [token]);\r\n\r\n  const [page, setPage] = useState(1);\r\n\r\n  const rowsPerPage = 4; // Number of rows per page\r\n  const pages = Math.ceil(tradeData.length / rowsPerPage);\r\n\r\n  // Calculate items for the current page\r\n  const paginatedData = React.useMemo(() => {\r\n    const startIndex = (page - 1) * rowsPerPage;\r\n    const endIndex = startIndex + rowsPerPage;\r\n    return tradeData.slice(startIndex, endIndex);\r\n  }, [page, tradeData]);\r\n  return (\r\n    <AdminLayout pageTitle=\"Dashboard\" pageSubtitle=\"All details\">\r\n      <Card className=\"p-2 mt-3\">\r\n        <div className=\"flex flex-col gap-4 flex-1\">\r\n          <div className=\"flex gap-2\">\r\n            <Card className=\"flex-1 p-3 border-none\">\r\n              <Table\r\n                removeWrapper\r\n                aria-label=\"Example table with client-side pagination\"\r\n                bottomContent={\r\n                  <div className=\"flex w-full justify-center\">\r\n                    <Pagination\r\n                      isCompact\r\n                      showControls\r\n                      showShadow\r\n                      color=\"secondary\"\r\n                      page={page}\r\n                      total={pages}\r\n                      onChange={(newPage) => setPage(newPage)}\r\n                    />\r\n                  </div>\r\n                }\r\n                classNames={{\r\n                  wrapper: \"min-h-[222px]\",\r\n                }}\r\n              >\r\n                <TableHeader>\r\n                  <TableColumn key=\"Date\">Date</TableColumn>\r\n                  <TableColumn key=\"buyValue\">Buy Value</TableColumn>\r\n                  <TableColumn key=\"sellValue\">Sell Value</TableColumn>\r\n                </TableHeader>\r\n                <TableBody\r\n                  items={paginatedData}\r\n                  emptyContent={\"No Data to display.\"}\r\n                >\r\n                  {(item) => (\r\n                    <TableRow key={item.name}>\r\n                      {(columnKey) => <TableCell>{item[columnKey]}</TableCell>}\r\n                    </TableRow>\r\n                  )}\r\n                </TableBody>\r\n              </Table>\r\n            </Card>\r\n\r\n            <Card className=\"flex-1 p-3\">\r\n              <Typography variant=\"subtitle1\" className=\"mb-3\">\r\n                Trade Details\r\n              </Typography>\r\n              <Select className=\"mb-2\" placeholder=\"User Name\">\r\n                {userData &&\r\n                  userData.map((item, index) => (\r\n                    <SelectItem key={item.id} value={item}>\r\n                      {item.firstName + \"\" + item.lastName}\r\n                    </SelectItem>\r\n                  ))}\r\n              </Select>\r\n            </Card>\r\n          </div>\r\n          <div className=\"flex  gap-2 p-3\">\r\n            <Card className=\"flex-1\">\r\n              <h1>Home Page</h1>\r\n            </Card>\r\n            <Card className=\"flex-1 p-3\">\r\n              <Typography variant=\"subtitle1\" className=\"mb-3\">\r\n                User Details\r\n              </Typography>\r\n              <Table>\r\n                <TableHeader>\r\n                  <TableColumn key=\"firstName\">FirstName</TableColumn>\r\n                  <TableColumn key=\"lastName\">LastName</TableColumn>\r\n                  <TableColumn key=\"role\">Role</TableColumn>\r\n                  <TableColumn key=\"userStatus\">Status</TableColumn>\r\n                </TableHeader>\r\n                <TableBody\r\n                  items={userData}\r\n                  emptyContent={\"No Data to display.\"}\r\n                >\r\n                  {(item) => (\r\n                    <TableRow key={item.id}>\r\n                      {(columnKey) => <TableCell>{item[columnKey]}</TableCell>}\r\n                    </TableRow>\r\n                  )}\r\n                </TableBody>\r\n              </Table>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n      </Card>\r\n    </AdminLayout>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL:'http://43.204.150.47:8000',\r\n  timeout:5000\r\n})\r\n\r\n\r\napi.interceptors.request.use(\r\n  (config)=>{\r\n    config.headers.Authorization = `Bearer ${localStorage.getItem(\"token\")}`;\r\n    return config;\r\n  },\r\n  (error) => {\r\n    // Handle request error\r\n    console.error(\"Request Interceptor Error:\", error);\r\n    return Promise.reject(error);\r\n  }\r\n)\r\n\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    console.log(\"Response Interceptor: Response received\");\r\n    return response;\r\n  },\r\n  (error) => {\r\n    if (error.response && error.response.status === 401) {\r\n      console.error(\"Response Interceptor: Unauthorized access - Redirecting to login\");\r\n    } else {\r\n      console.error(\"Response Interceptor Error:\", error.message);\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api","export default {\n  disabled: false\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport config from './config';\nimport { timeoutsShape } from './utils/PropTypes';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { forceReflow } from './utils/reflow';\nexport var UNMOUNTED = 'unmounted';\nexport var EXITED = 'exited';\nexport var ENTERING = 'entering';\nexport var ENTERED = 'entered';\nexport var EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nvar Transition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  } // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n  ;\n\n  var _proto = Transition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      if (nextStatus === ENTERING) {\n        if (this.props.unmountOnExit || this.props.mountOnEnter) {\n          var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this); // https://github.com/reactjs/react-transition-group/pull/749\n          // With unmountOnExit or mountOnEnter, the enter animation should happen at the transition between `exited` and `entering`.\n          // To make the animation happen,  we have to separate each rendering and avoid being processed as batched.\n\n          if (node) forceReflow(node);\n        }\n\n        this.performEnter(mounting);\n      } else {\n        this.performExit();\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context ? this.context.isMounting : mounting;\n\n    var _ref2 = this.props.nodeRef ? [appearing] : [ReactDOM.findDOMNode(this), appearing],\n        maybeNode = _ref2[0],\n        maybeAppearing = _ref2[1];\n\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter || config.disabled) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onEnter(maybeNode, maybeAppearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(maybeNode, maybeAppearing);\n\n      _this2.onTransitionEnd(enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(maybeNode, maybeAppearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit() {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts();\n    var maybeNode = this.props.nodeRef ? undefined : ReactDOM.findDOMNode(this); // no exit animation skip right to EXITED\n\n    if (!exit || config.disabled) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onExit(maybeNode);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(maybeNode);\n\n      _this3.onTransitionEnd(timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(maybeNode);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {\n    this.setNextCallback(handler);\n    var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],\n          maybeNode = _ref3[0],\n          maybeNextCallback = _ref3[1];\n\n      this.props.addEndListener(maybeNode, maybeNextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        _in = _this$props.in,\n        _mountOnEnter = _this$props.mountOnEnter,\n        _unmountOnExit = _this$props.unmountOnExit,\n        _appear = _this$props.appear,\n        _enter = _this$props.enter,\n        _exit = _this$props.exit,\n        _timeout = _this$props.timeout,\n        _addEndListener = _this$props.addEndListener,\n        _onEnter = _this$props.onEnter,\n        _onEntering = _this$props.onEntering,\n        _onEntered = _this$props.onEntered,\n        _onExit = _this$props.onExit,\n        _onExiting = _this$props.onExiting,\n        _onExited = _this$props.onExited,\n        _nodeRef = _this$props.nodeRef,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\", \"mountOnEnter\", \"unmountOnExit\", \"appear\", \"enter\", \"exit\", \"timeout\", \"addEndListener\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"nodeRef\"]);\n\n    return (\n      /*#__PURE__*/\n      // allows for nested Transitions\n      React.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, typeof children === 'function' ? children(status, childProps) : React.cloneElement(React.Children.only(children), childProps))\n    );\n  };\n\n  return Transition;\n}(React.Component);\n\nTransition.contextType = TransitionGroupContext;\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A React reference to DOM element that need to transition:\n   * https://stackoverflow.com/a/51127130/4671932\n   *\n   *   - When `nodeRef` prop is used, `node` is not passed to callback functions\n   *      (e.g. `onEnter`) because user already has direct access to the node.\n   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new\n   *     `nodeRef` need to be provided to `Transition` with changed `key` prop\n   *     (see\n   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).\n   */\n  nodeRef: PropTypes.shape({\n    current: typeof Element === 'undefined' ? PropTypes.any : function (propValue, key, componentName, location, propFullName, secret) {\n      var value = propValue[key];\n      return PropTypes.instanceOf(value && 'ownerDocument' in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);\n    }\n  }),\n\n  /**\n   * A `function` child can be used instead of a React element. This function is\n   * called with the current transition status (`'entering'`, `'entered'`,\n   * `'exiting'`, `'exited'`), which can be used to apply context\n   * specific props to a component.\n   *\n   * ```jsx\n   * <Transition in={this.state.in} timeout={150}>\n   *   {state => (\n   *     <MyComponent className={`fade fade-${state}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * By default the child component does not perform the enter transition when\n   * it first mounts, regardless of the value of `in`. If you want this\n   * behavior, set both `appear` and `in` to `true`.\n   *\n   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop\n   * > only adds an additional enter transition. However, in the\n   * > `<CSSTransition>` component that first enter transition does result in\n   * > additional `.appear-*` classes, that way you can choose to style it\n   * > differently.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided.\n   *\n   * You may specify a single timeout for all transitions:\n   *\n   * ```jsx\n   * timeout={500}\n   * ```\n   *\n   * or individually:\n   *\n   * ```jsx\n   * timeout={{\n   *  appear: 500,\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * - `appear` defaults to the value of `enter`\n   * - `enter` defaults to `0`\n   * - `exit` defaults to `0`\n   *\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. Timeouts are still used as a fallback if provided.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func\n} : {}; // Name the function so it is clearer in the documentation\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = UNMOUNTED;\nTransition.EXITED = EXITED;\nTransition.ENTERING = ENTERING;\nTransition.ENTERED = ENTERED;\nTransition.EXITING = EXITING;\nexport default Transition;","export var forceReflow = function forceReflow(node) {\n  return node.scrollTop;\n};"],"names":["SideNavbar","_jsx","Navbar","expand","className","children","_jsxs","Container","Brand","href","Toggle","Button","variant","onClick","handleLogout","localStorage","removeItem","window","location","_ref","HomePage","tradeData","setTradeData","useState","token","getItem","userData","setUserData","useEffect","async","api","get","headers","Authorization","concat","status","data","fetchTrade","allusers","getAllUsers","page","setPage","pages","Math","ceil","length","paginatedData","React","startIndex","endIndex","slice","AdminLayout","pageTitle","pageSubtitle","Card","Table","removeWrapper","bottomContent","Pagination","isCompact","showControls","showShadow","color","total","onChange","newPage","classNames","wrapper","TableHeader","TableColumn","TableBody","items","emptyContent","item","TableRow","columnKey","TableCell","name","Typography","Select","placeholder","map","index","SelectItem","value","firstName","lastName","id","axios","create","baseURL","timeout","interceptors","request","use","config","error","console","Promise","reject","response","log","message","UNMOUNTED","EXITED","ENTERING","ENTERED","EXITING","Transition","_React$Component","props","context","_this","call","this","initialStatus","appear","isMounting","enter","appearStatus","in","unmountOnExit","mountOnEnter","state","nextCallback","_inheritsLoose","getDerivedStateFromProps","prevState","_proto","prototype","componentDidMount","updateStatus","componentDidUpdate","prevProps","nextStatus","componentWillUnmount","cancelNextCallback","getTimeouts","exit","undefined","mounting","node","nodeRef","current","ReactDOM","findDOMNode","scrollTop","forceReflow","performEnter","performExit","setState","_this2","appearing","_ref2","maybeNode","maybeAppearing","timeouts","enterTimeout","safeSetState","onEntered","onEnter","onEntering","onTransitionEnd","_this3","onExit","onExiting","onExited","cancel","nextState","callback","setNextCallback","_this4","active","event","handler","doesNotHaveTimeoutOrListener","addEndListener","_ref3","maybeNextCallback","setTimeout","render","_this$props","childProps","_objectWithoutPropertiesLoose","TransitionGroupContext","Provider","only","noop","contextType","propTypes","defaultProps"],"sourceRoot":""}