{"version":3,"file":"static/js/295.f8002241.chunk.js","mappings":"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","sources":["component/pages/IdPage.jsx","component/table/CustomTable.jsx","config/AxiosCofig.js","../node_modules/@mui/material/Divider/dividerClasses.js","../node_modules/@mui/material/ListItemIcon/listItemIconClasses.js","../node_modules/@mui/material/ListItemText/listItemTextClasses.js","../node_modules/@mui/material/MenuItem/menuItemClasses.js","../node_modules/@mui/material/MenuItem/MenuItem.js","../node_modules/@mui/material/internal/svg-icons/ArrowDownward.js","../node_modules/@mui/material/TableSortLabel/tableSortLabelClasses.js","../node_modules/@mui/material/TableSortLabel/TableSortLabel.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n  Typography,\r\n  Box,\r\n  Modal,\r\n  TextField,\r\n  IconButton,\r\n  Button,\r\n  MenuItem,\r\n  InputAdornment,\r\n  Select,\r\n  FormControl,\r\n  InputLabel,\r\n  FormHelperText,\r\n} from \"@mui/material\";\r\nimport CustomTable from \"../table/CustomTable.jsx\";\r\nimport AdminLayout from \"../layouts/AdminLayout.jsx\";\r\nimport api from \"../../config/AxiosCofig.js\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Card } from \"@nextui-org/react\";\r\nimport { IoSearch, IoAddCircleOutline } from \"react-icons/io5\";\r\nimport { CiMenuKebab } from \"react-icons/ci\";\r\nimport {\r\n  Dropdown,\r\n  DropdownTrigger,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n} from \"@nextui-org/react\";\r\n\r\nconst brokerValidationSchema = Yup.object().shape({\r\n  brokerName: Yup.string().required(\"Broker Name is required\"),\r\n  id: Yup.string().required(\"ID is required\"),\r\n  startDate: Yup.date().required(\"Start Date is required\"),\r\n  employee: Yup.string().required(\"Dealer is required\"),\r\n  nism: Yup.string().required(\"NISM is required\"),\r\n  idType: Yup.string().required(\"ID Type is required\"),\r\n});\r\n\r\nconst brokerTableTitle = [\r\n  \"Id\",\r\n  \"Broker Name\",\r\n  // \"Start Date\",\r\n  // \"Releases Date\",\r\n  \"Employee\",\r\n  \"Nism\",\r\n  \"IdType\",\r\n  \"Action\",\r\n];\r\n\r\nconst AdminSettings = () => {\r\n  const [brokerData, setBrokerData] = useState([]);\r\n  const [selectedBrokerFilter, setSelectedBrokerFilter] = useState(\"\");\r\n  const [idData, setIdData] = useState([]);\r\n  const [filteredIdData, setFilteredIdData] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [getUserList, setGetUserList] = useState([]);\r\n  const [selectedBroker, setSelectedBroker] = useState(null);\r\n  const [loader, setLoader] = useState(false);\r\n  const [idType] = useState([\r\n    \"Manual-ODIN\",\r\n    \"Manual-GREEK\",\r\n    \"Manual-XTS\",\r\n    \"Convex\",\r\n    \"XTS-API\",\r\n  ]);\r\n\r\n  const getBrokerData = async () => {\r\n    try {\r\n      const response = await api.get(\"/getAllBroker\");\r\n      if (response.status === 200) {\r\n        setBrokerData(response?.data?.data.filter((data) => data.status === 1));\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      // toast.error(\"Error fetching broker data.\");\r\n    }\r\n  };\r\n\r\n  const getIdData = async () => {\r\n    try {\r\n      setLoader(true);\r\n      const response = await api.get(\"/getIds\");\r\n      if (response.status === 200) {\r\n        const structureData = response.data.data.map((data) => ({\r\n          Id: data.idNumber?.toUpperCase(),\r\n          \"Broker Name\": data.brokerName.toUpperCase(),\r\n          // \"Start Date\": data.startDate,\r\n          // \"Releases Date\": data.releaseDate || \"-\",\r\n          \"Record Id\": data.recordId,\r\n          Employee: data?.employeeId?.toUpperCase() || \"-\",\r\n          Nism: data.nism?.toUpperCase(),\r\n          IdType: data.idType?.toUpperCase(),\r\n          Action: (\r\n            <Dropdown>\r\n              <DropdownTrigger>\r\n                <IconButton>\r\n                  <CiMenuKebab />\r\n                </IconButton>\r\n              </DropdownTrigger>\r\n              <DropdownMenu\r\n                aria-label=\"Action event example\"\r\n                onAction={(key) => {\r\n                  if (key === \"release\") {\r\n                    releaseId(data);\r\n                  } else if (key === \"edit\") {\r\n                    editBroker(data);\r\n                  } else if(key === \"delete\"){\r\n                    deleteId(data);\r\n                  }\r\n                }}\r\n              >\r\n                <DropdownItem key=\"release\" isDisabled={data.status === 3}>\r\n                  Release\r\n                </DropdownItem>\r\n                <DropdownItem key=\"edit\" isDisabled={data.status === 3}>\r\n                  Edit\r\n                </DropdownItem>\r\n                <DropdownItem key=\"delete\">\r\n                  Delete\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </Dropdown>\r\n          ),\r\n        }));\r\n        setIdData(structureData);\r\n        setFilteredIdData(structureData);\r\n        setLoader(false);\r\n      }\r\n    } catch (error) {\r\n      setLoader(false);\r\n      console.error(error);\r\n      // toast.error(\"Error fetching ID data.\");\r\n    }\r\n  };\r\n\r\n  const handleFilterChange = (event) => {\r\n    const selectedBroker = event.target.value;\r\n    setSelectedBrokerFilter(selectedBroker);\r\n\r\n    if (selectedBroker) {\r\n      const filteredData = idData.filter(\r\n        (data) => data[\"Broker Name\"] === selectedBroker\r\n      );\r\n      setFilteredIdData(filteredData);\r\n    } else {\r\n      setFilteredIdData(idData);\r\n    }\r\n  };\r\n\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setEditMode(false);\r\n    setSelectedBroker(null);\r\n  };\r\n\r\n  const getuserData = async () => {\r\n    try {\r\n      const response = await api.get(\"/users\");\r\n      if (response.status === 200) {\r\n        setGetUserList(response.data);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      // toast.error(\"Error fetching user data.\");\r\n    }\r\n  };\r\n\r\n  const editBroker = (broker) => {\r\n    setSelectedBroker(broker);\r\n    setEditMode(true);\r\n    handleOpen();\r\n  };\r\n\r\n  const releaseId = async (broker) => {\r\n    try {\r\n      await api.put(`/releaseId/${broker.recordId}/3`);\r\n      toast.success(`Released Id: ${broker.recordId}`);\r\n      getIdData();\r\n    } catch (error) {\r\n      toast.error(\"Error releasing broker.\");\r\n    }\r\n  };\r\n\r\n  const deleteId = async (broker) => {\r\n    try {\r\n      console.warn(broker)\r\n      await api.put(`/changeStatus/${broker.recordId}`);\r\n      toast.success(\"ID deleted successfully.\");\r\n      getIdData();\r\n    } catch (error) {\r\n      toast.error(\"Error deleting ID.\");\r\n    }\r\n  }\r\n\r\n  const handleSubmit = async (values, { resetForm }) => {\r\n    try {\r\n      if (editMode) {\r\n        await api.put(`/updateId/${selectedBroker.recordId}`, values);\r\n        toast.success(\"ID updated successfully.\");\r\n      } else {\r\n        await api.post(\"/createId\", values);\r\n        toast.success(\"ID added successfully.\");\r\n      }\r\n      getIdData();\r\n      resetForm();\r\n      handleClose();\r\n    } catch (error) {\r\n      console.error(error?.response?.data?.detail);\r\n      toast.error(error?.response?.data?.detail);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getuserData();\r\n    getIdData();\r\n    getBrokerData();\r\n  }, []);\r\n\r\n  const initialValues = {\r\n    brokerName: selectedBroker?.brokerId || \"\",\r\n    id: selectedBroker?.idNumber || \"\",\r\n    startDate: selectedBroker?.startDate || \"\",\r\n    employee: selectedBroker?.employeeId || \"\",\r\n    nism: selectedBroker?.nism || \"\",\r\n    idType: selectedBroker?.idType || \"\",\r\n  };\r\n\r\n  return (\r\n    <AdminLayout pageTitle=\"ID Management\" pageSubtitle=\"Manage ID details\">\r\n      <Card style={{ marginTop: \"1rem\" }}>\r\n        <div className=\"flex justify-between p-4 align-middle\">\r\n          <div className=\"flex gap-3\">\r\n            <TextField\r\n              className=\"searchUser\"\r\n              placeholder=\"Search\"\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <IoSearch />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n            <FormControl style={{ minWidth: 200, marginRight: \"1rem\" }}>\r\n              {/* <InputLabel id=\"brokerFilter-label\">Filter by Broker</InputLabel> */}\r\n              <Select\r\n                // labelId=\"brokerFilter-label\"\r\n                value={selectedBrokerFilter}\r\n                onChange={handleFilterChange}\r\n                // label=\"Filter by Broker\"\r\n                displayEmpty\r\n              >\r\n                <MenuItem value=\"\">All Brokers</MenuItem>\r\n                {brokerData.map((broker, index) => (\r\n                  <MenuItem key={index} value={broker.brokerName}>\r\n                    {broker.brokerName}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n\r\n          <Button\r\n            onClick={handleOpen}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            startIcon={<IoAddCircleOutline />}\r\n          >\r\n            Add ID\r\n          </Button>\r\n        </div>\r\n\r\n        <Box mt={3}>\r\n          <CustomTable\r\n            title={brokerTableTitle}\r\n            tableData={filteredIdData}\r\n            loading={loader}\r\n          />\r\n        </Box>\r\n      </Card>\r\n\r\n      <Modal open={open} onClose={handleClose}>\r\n        <Box\r\n          className=\"modal-box\"\r\n          sx={{\r\n            position: \"absolute\",\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n            width: 600,\r\n            bgcolor: \"background.paper\",\r\n            boxShadow: 24,\r\n            p: 4,\r\n            borderRadius: 2,\r\n            overflowY: \"scroll\",\r\n          }}\r\n        >\r\n          <Typography variant=\"h6\">\r\n            {editMode ? \"Edit ID\" : \"Add New ID\"}\r\n          </Typography>\r\n          <Formik\r\n            initialValues={initialValues}\r\n            validationSchema={brokerValidationSchema}\r\n            onSubmit={handleSubmit}\r\n          >\r\n            {({ values, handleChange, errors, touched, handleBlur }) => (\r\n              <Form>\r\n                <div className=\"flex gap-2\">\r\n                  <TextField\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    name=\"id\"\r\n                    label=\"ID\"\r\n                    value={values.id || \"\"}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    error={touched.id && Boolean(errors.id)}\r\n                    helperText={touched.id && errors.id}\r\n                    inputProps={{ style: { textTransform: \"uppercase\" } }}\r\n                  />\r\n                  <FormControl\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    error={touched.brokerName && Boolean(errors.brokerName)}\r\n                  >\r\n                    <InputLabel id=\"brokerName-label\">Broker Name</InputLabel>\r\n                    <Select\r\n                      labelId=\"brokerName-label\"\r\n                      id=\"brokerName\"\r\n                      name=\"brokerName\"\r\n                      label=\"Broker Name\"\r\n                      value={values.brokerName || \"\"}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      inputProps={{ style: { textTransform: \"uppercase\" } }}\r\n                    >\r\n                      {brokerData.map((data, index) => (\r\n                        <MenuItem key={index} value={data.id}>\r\n                          {data.brokerName}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                    {touched.brokerName && Boolean(errors.brokerName) && (\r\n                      <FormHelperText>{errors.brokerName}</FormHelperText>\r\n                    )}\r\n                  </FormControl>\r\n                </div>\r\n                <div className=\"flex gap-2\">\r\n                  <TextField\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    name=\"startDate\"\r\n                    label=\"Start Date\"\r\n                    type=\"date\"\r\n                    InputLabelProps={{ shrink: true }}\r\n                    value={values.startDate || \"\"}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    error={touched.startDate && Boolean(errors.startDate)}\r\n                    helperText={touched.startDate && errors.startDate}\r\n                  />\r\n                  <FormControl\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    error={touched.employee && Boolean(errors.employee)}\r\n                  >\r\n                    <InputLabel id=\"employee-label\">Dealer</InputLabel>\r\n                    <Select\r\n                      labelId=\"employee-label\"\r\n                      id=\"employee\"\r\n                      name=\"employee\"\r\n                      label=\"Dealer\"\r\n                      value={values.employee || \"\"}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                    >\r\n                      {getUserList.map((data, index) => (\r\n                        <MenuItem key={index} value={data.id}>\r\n                          {data.firstName + \" \" + data.lastName}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                    {touched.employee && errors.employee && (\r\n                      <FormHelperText>{errors.employee}</FormHelperText>\r\n                    )}\r\n                  </FormControl>\r\n                </div>\r\n                <div className=\"flex gap-2\">\r\n                  <TextField\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    name=\"nism\"\r\n                    label=\"NISM\"\r\n                    value={values.nism || \"\"}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    error={touched.nism && Boolean(errors.nism)}\r\n                    helperText={touched.nism && errors.nism}\r\n                    inputProps={{ style: { textTransform: \"uppercase\" } }}\r\n                  />\r\n                  <FormControl\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    error={touched.idType && Boolean(errors.idType)}\r\n                  >\r\n                    <InputLabel id=\"IDType\">ID Type</InputLabel>\r\n                    <Select\r\n                      labelId=\"IDType\"\r\n                      id=\"IDType\"\r\n                      name=\"idType\"\r\n                      label=\"ID Type\"\r\n                      value={values.idType || \"\"}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                    >\r\n                      {idType !== undefined &&\r\n                        idType?.map((data, index) => (\r\n                          <MenuItem key={index} value={data}>\r\n                            {data}\r\n                          </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                    {touched.idType && Boolean(errors.idType) && (\r\n                      <FormHelperText>{errors.idType}</FormHelperText>\r\n                    )}\r\n                  </FormControl>\r\n                </div>\r\n                <div className=\"flex justify-end gap-4 mt-6\">\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"error\"\r\n                    onClick={handleClose}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                  <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                    {editMode ? \"Update\" : \"Add\"}\r\n                  </Button>\r\n                </div>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </Box>\r\n      </Modal>\r\n    </AdminLayout>\r\n  );\r\n};\r\n\r\nexport default AdminSettings;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  TableSortLabel,\r\n  CircularProgress,\r\n} from \"@mui/material\";\r\nimport { Button } from \"@nextui-org/react\";\r\n\r\nconst CustomTable = ({\r\n  title = [],\r\n  columnWidths = [],\r\n  tableData = [],\r\n  renderAction,\r\n  loading,\r\n}) => {\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const [sortConfig, setSortConfig] = useState({ key: \"\", direction: \"asc\" });\r\n\r\n  const handleSort = (columnKey) => {\r\n    setSortConfig((prevConfig) => {\r\n      const isAscending =\r\n        prevConfig.key === columnKey && prevConfig.direction === \"asc\";\r\n      return {\r\n        key: columnKey,\r\n        direction: isAscending ? \"desc\" : \"asc\",\r\n      };\r\n    });\r\n  };\r\n\r\n  const sortedData = React.useMemo(() => {\r\n    if (!sortConfig.key) return tableData;\r\n    return [...tableData].sort((a, b) => {\r\n      if (a[sortConfig.key] < b[sortConfig.key]) {\r\n        return sortConfig.direction === \"asc\" ? -1 : 1;\r\n      }\r\n      if (a[sortConfig.key] > b[sortConfig.key]) {\r\n        return sortConfig.direction === \"asc\" ? 1 : -1;\r\n      }\r\n      return 0;\r\n    });\r\n  }, [tableData, sortConfig]);\r\n\r\n  const handleButtonClick = (status, id) => {\r\n    if (status === 1) {\r\n      renderAction(id);\r\n    } else {\r\n      renderAction();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper className=\"custom\">\r\n      <TableContainer className=\"tble-container\">\r\n        <Table className=\"tble-custom\" stickyHeader>\r\n          <TableHead>\r\n            <TableRow className=\"tble-head\">\r\n              {title.map((header, index) => {\r\n                if (header === \"Gross Fund\") {\r\n                  return (\r\n                    <TableCell\r\n                      key=\"grossFund\"\r\n                      align=\"center\"\r\n                      sx={{\r\n                        // fontWeight: \"bold\",\r\n                        // minWidth: 200,\r\n                        // maxWidth: 300,\r\n                        position: \"sticky\",\r\n                        top: 0,\r\n                        backgroundColor: \"white\",\r\n                        zIndex: 1,\r\n                      }}\r\n                    >\r\n                      <TableSortLabel\r\n                        active={sortConfig.key === \"grossFund\"}\r\n                        direction={\r\n                          sortConfig.key === \"grossFund\"\r\n                            ? sortConfig.direction\r\n                            : \"asc\"\r\n                        }\r\n                        onClick={() => handleSort(\"grossFund\")}\r\n                      >\r\n                        Gross Fund (Fund | Interest | Sharing)\r\n                      </TableSortLabel>\r\n                    </TableCell>\r\n                  );\r\n                }\r\n                return (\r\n                  <TableCell\r\n                    key={index}\r\n                    align=\"center\"\r\n                    sx={{\r\n                      // fontWeight: \"bold\",\r\n                      width: columnWidths[index] || \"auto\",\r\n                      minWidth: columnWidths[index] || 150,\r\n                      maxWidth: columnWidths[index] || 300,\r\n                      position: \"sticky\",\r\n                      top: 0,\r\n                      backgroundColor: \"white\",\r\n                      zIndex: 2,\r\n                    }}\r\n                  >\r\n                    <TableSortLabel\r\n                      active={sortConfig.key === header.toLowerCase()}\r\n                      direction={\r\n                        sortConfig.key === header.toLowerCase()\r\n                          ? sortConfig.direction\r\n                          : \"asc\"\r\n                      }\r\n                      onClick={() => handleSort(header.toLowerCase())}\r\n                    >\r\n                      {header?.toUpperCase()}\r\n                    </TableSortLabel>\r\n                  </TableCell>\r\n                );\r\n              })}\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n          <TableBody className=\"tble-body\">\r\n            {loading && (\r\n              <TableRow>\r\n                <TableCell colSpan={title.length} className=\"middle-noData\">\r\n                  <CircularProgress />\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n            {sortedData.map((rowData, rowIndex) => (\r\n              <TableRow key={rowIndex}>\r\n                {Object.keys(rowData).map((key, colIndex) => {\r\n                  if (\r\n                    [\r\n                      \"status\",\r\n                      \"id\",\r\n                      \"brokerId\",\r\n                      \"fundAllocated\",\r\n                      \"Record Id\",\r\n                    ].includes(key)\r\n                  )\r\n                    return null;\r\n\r\n                  if (key === \"grossFund\") {\r\n                    return (\r\n                      <TableCell\r\n                        key={`${rowIndex}-grossFund`}\r\n                        align=\"center\"\r\n                        sx={{\r\n                          minWidth: 200,\r\n                          maxWidth: 300,\r\n                          whiteSpace: \"nowrap\",\r\n                          overflow: \"hidden\",\r\n                          textOverflow: \"ellipsis\",\r\n                        }}\r\n                      >\r\n                        {`${rowData[\"grossFund\"].toUpperCase()} | ${rowData[\"grossFundInterest\"].toUpperCase()} | ${rowData[\"grossFundSharing\"].toUpperCase()}`}\r\n                      </TableCell>\r\n                    );\r\n                  }\r\n\r\n                  return (\r\n                    <TableCell\r\n                      key={`${rowIndex}-${colIndex}`}\r\n                      align=\"center\"\r\n                      sx={{\r\n                        width: columnWidths[colIndex] || \"auto\", // Use dynamic width\r\n                        minWidth: columnWidths[colIndex] || 150, // Prevent shrinking\r\n                        maxWidth: columnWidths[colIndex] || 300, // Optional: Limit max width\r\n                        whiteSpace: \"nowrap\", // Prevent text wrapping\r\n                        overflow: \"hidden\",\r\n                        textOverflow: \"ellipsis\", // Ellipsis for overflow text\r\n                      }}\r\n                    >\r\n                      {key === \"action\" && renderAction ? (\r\n                        <Button\r\n                          isDisabled={rowData[\"status\"] === 3}\r\n                          onPress={() =>\r\n                            handleButtonClick(rowData[\"status\"], rowData[\"id\"])\r\n                          }\r\n                        >\r\n                          {rowData[\"status\"] === 1 ? \"Release\" : \"Released\"}\r\n                        </Button>\r\n                      ) : (\r\n                        rowData[key]\r\n                      )}\r\n                    </TableCell>\r\n                  );\r\n                })}\r\n              </TableRow>\r\n            ))}\r\n            {!loading && sortedData.length === 0 && (\r\n              <TableRow>\r\n                <TableCell\r\n                  colSpan={title.length}\r\n                  className=\"middle-noData\"\r\n                  align=\"center\"\r\n                >\r\n                  No data found.\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default CustomTable;\r\n","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  // baseURL:'http://43.204.150.47:8000',\r\n  baseURL:'http://localhost:8000',\r\n  timeout:5000\r\n})\r\n\r\n\r\napi.interceptors.request.use(\r\n  (config)=>{\r\n    config.headers.Authorization = `Bearer ${localStorage.getItem(\"token\")}`;\r\n    return config;\r\n  },\r\n  (error) => {\r\n    // Handle request error\r\n    console.error(\"Request Interceptor Error:\", error);\r\n    return Promise.reject(error);\r\n  }\r\n)\r\n\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    console.log(\"Response Interceptor: Response received\");\r\n    return response;\r\n  },\r\n  (error) => {\r\n    if (error.response && error.response.status === 401) {\r\n      window.location.href = \"/\";  \r\n      console.error(\"Response Interceptor: Unauthorized access - Redirecting to login\");\r\n    } else {\r\n      console.error(\"Response Interceptor Error:\", error.message);\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getDividerUtilityClass(slot) {\n  return generateUtilityClass('MuiDivider', slot);\n}\nconst dividerClasses = generateUtilityClasses('MuiDivider', ['root', 'absolute', 'fullWidth', 'inset', 'middle', 'flexItem', 'light', 'vertical', 'withChildren', 'withChildrenVertical', 'textAlignRight', 'textAlignLeft', 'wrapper', 'wrapperVertical']);\nexport default dividerClasses;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getListItemIconUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemIcon', slot);\n}\nconst listItemIconClasses = generateUtilityClasses('MuiListItemIcon', ['root', 'alignItemsFlexStart']);\nexport default listItemIconClasses;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getListItemTextUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemText', slot);\n}\nconst listItemTextClasses = generateUtilityClasses('MuiListItemText', ['root', 'multiline', 'dense', 'inset', 'primary', 'secondary']);\nexport default listItemTextClasses;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getMenuItemUtilityClass(slot) {\n  return generateUtilityClass('MuiMenuItem', slot);\n}\nconst menuItemClasses = generateUtilityClasses('MuiMenuItem', ['root', 'focusVisible', 'dense', 'disabled', 'divider', 'gutters', 'selected']);\nexport default menuItemClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport rootShouldForwardProp from \"../styles/rootShouldForwardProp.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport ListContext from \"../List/ListContext.js\";\nimport ButtonBase from \"../ButtonBase/index.js\";\nimport useEnhancedEffect from \"../utils/useEnhancedEffect.js\";\nimport useForkRef from \"../utils/useForkRef.js\";\nimport { dividerClasses } from \"../Divider/index.js\";\nimport { listItemIconClasses } from \"../ListItemIcon/index.js\";\nimport { listItemTextClasses } from \"../ListItemText/index.js\";\nimport menuItemClasses, { getMenuItemUtilityClass } from \"./menuItemClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, ownerState.dense && styles.dense, ownerState.divider && styles.divider, !ownerState.disableGutters && styles.gutters];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    disabled,\n    dense,\n    divider,\n    disableGutters,\n    selected,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', dense && 'dense', disabled && 'disabled', !disableGutters && 'gutters', divider && 'divider', selected && 'selected']\n  };\n  const composedClasses = composeClasses(slots, getMenuItemUtilityClass, classes);\n  return {\n    ...classes,\n    ...composedClasses\n  };\n};\nconst MenuItemRoot = styled(ButtonBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiMenuItem',\n  slot: 'Root',\n  overridesResolver\n})(memoTheme(({\n  theme\n}) => ({\n  ...theme.typography.body1,\n  display: 'flex',\n  justifyContent: 'flex-start',\n  alignItems: 'center',\n  position: 'relative',\n  textDecoration: 'none',\n  minHeight: 48,\n  paddingTop: 6,\n  paddingBottom: 6,\n  boxSizing: 'border-box',\n  whiteSpace: 'nowrap',\n  '&:hover': {\n    textDecoration: 'none',\n    backgroundColor: (theme.vars || theme).palette.action.hover,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  },\n  [`&.${menuItemClasses.selected}`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    [`&.${menuItemClasses.focusVisible}`]: {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  },\n  [`&.${menuItemClasses.selected}:hover`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n    }\n  },\n  [`&.${menuItemClasses.focusVisible}`]: {\n    backgroundColor: (theme.vars || theme).palette.action.focus\n  },\n  [`&.${menuItemClasses.disabled}`]: {\n    opacity: (theme.vars || theme).palette.action.disabledOpacity\n  },\n  [`& + .${dividerClasses.root}`]: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  [`& + .${dividerClasses.inset}`]: {\n    marginLeft: 52\n  },\n  [`& .${listItemTextClasses.root}`]: {\n    marginTop: 0,\n    marginBottom: 0\n  },\n  [`& .${listItemTextClasses.inset}`]: {\n    paddingLeft: 36\n  },\n  [`& .${listItemIconClasses.root}`]: {\n    minWidth: 36\n  },\n  variants: [{\n    props: ({\n      ownerState\n    }) => !ownerState.disableGutters,\n    style: {\n      paddingLeft: 16,\n      paddingRight: 16\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.divider,\n    style: {\n      borderBottom: `1px solid ${(theme.vars || theme).palette.divider}`,\n      backgroundClip: 'padding-box'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => !ownerState.dense,\n    style: {\n      [theme.breakpoints.up('sm')]: {\n        minHeight: 'auto'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.dense,\n    style: {\n      minHeight: 32,\n      // https://m2.material.io/components/menus#specs > Dense\n      paddingTop: 4,\n      paddingBottom: 4,\n      ...theme.typography.body2,\n      [`& .${listItemIconClasses.root} svg`]: {\n        fontSize: '1.25rem'\n      }\n    }\n  }]\n})));\nconst MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiMenuItem'\n  });\n  const {\n    autoFocus = false,\n    component = 'li',\n    dense = false,\n    divider = false,\n    disableGutters = false,\n    focusVisibleClassName,\n    role = 'menuitem',\n    tabIndex: tabIndexProp,\n    className,\n    ...other\n  } = props;\n  const context = React.useContext(ListContext);\n  const childContext = React.useMemo(() => ({\n    dense: dense || context.dense || false,\n    disableGutters\n  }), [context.dense, dense, disableGutters]);\n  const menuItemRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (autoFocus) {\n      if (menuItemRef.current) {\n        menuItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error('MUI: Unable to set focus to a MenuItem whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n  const ownerState = {\n    ...props,\n    dense: childContext.dense,\n    divider,\n    disableGutters\n  };\n  const classes = useUtilityClasses(props);\n  const handleRef = useForkRef(menuItemRef, ref);\n  let tabIndex;\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n  return /*#__PURE__*/_jsx(ListContext.Provider, {\n    value: childContext,\n    children: /*#__PURE__*/_jsx(MenuItemRoot, {\n      ref: handleRef,\n      role: role,\n      tabIndex: tabIndex,\n      component: component,\n      focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n      className: clsx(classes.root, className),\n      ...other,\n      ownerState: ownerState,\n      classes: classes\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the list item is focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input is used.\n   * The prop defaults to the value inherited from the parent Menu component.\n   * @default false\n   */\n  dense: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * If `true`, a 1px light border is added to the bottom of the menu item.\n   * @default false\n   */\n  divider: PropTypes.bool,\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n  /**\n   * @ignore\n   */\n  role: PropTypes /* @typescript-to-proptypes-ignore */.string,\n  /**\n   * If `true`, the component is selected.\n   * @default false\n   */\n  selected: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * @default 0\n   */\n  tabIndex: PropTypes.number\n} : void 0;\nexport default MenuItem;","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableSortLabelUtilityClass(slot) {\n  return generateUtilityClass('MuiTableSortLabel', slot);\n}\nconst tableSortLabelClasses = generateUtilityClasses('MuiTableSortLabel', ['root', 'active', 'icon', 'iconDirectionDesc', 'iconDirectionAsc', 'directionDesc', 'directionAsc']);\nexport default tableSortLabelClasses;","'use client';\n\nimport composeClasses from '@mui/utils/composeClasses';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport ButtonBase from \"../ButtonBase/index.js\";\nimport ArrowDownwardIcon from \"../internal/svg-icons/ArrowDownward.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport tableSortLabelClasses, { getTableSortLabelUtilityClass } from \"./tableSortLabelClasses.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    direction,\n    active\n  } = ownerState;\n  const slots = {\n    root: ['root', active && 'active', `direction${capitalize(direction)}`],\n    icon: ['icon', `iconDirection${capitalize(direction)}`]\n  };\n  return composeClasses(slots, getTableSortLabelUtilityClass, classes);\n};\nconst TableSortLabelRoot = styled(ButtonBase, {\n  name: 'MuiTableSortLabel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.active && styles.active];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  cursor: 'pointer',\n  display: 'inline-flex',\n  justifyContent: 'flex-start',\n  flexDirection: 'inherit',\n  alignItems: 'center',\n  '&:focus': {\n    color: (theme.vars || theme).palette.text.secondary\n  },\n  '&:hover': {\n    color: (theme.vars || theme).palette.text.secondary,\n    [`& .${tableSortLabelClasses.icon}`]: {\n      opacity: 0.5\n    }\n  },\n  [`&.${tableSortLabelClasses.active}`]: {\n    color: (theme.vars || theme).palette.text.primary,\n    [`& .${tableSortLabelClasses.icon}`]: {\n      opacity: 1,\n      color: (theme.vars || theme).palette.text.secondary\n    }\n  }\n})));\nconst TableSortLabelIcon = styled('span', {\n  name: 'MuiTableSortLabel',\n  slot: 'Icon',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.icon, styles[`iconDirection${capitalize(ownerState.direction)}`]];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  fontSize: 18,\n  marginRight: 4,\n  marginLeft: 4,\n  opacity: 0,\n  transition: theme.transitions.create(['opacity', 'transform'], {\n    duration: theme.transitions.duration.shorter\n  }),\n  userSelect: 'none',\n  variants: [{\n    props: {\n      direction: 'desc'\n    },\n    style: {\n      transform: 'rotate(0deg)'\n    }\n  }, {\n    props: {\n      direction: 'asc'\n    },\n    style: {\n      transform: 'rotate(180deg)'\n    }\n  }]\n})));\n\n/**\n * A button based label for placing inside `TableCell` for column sorting.\n */\nconst TableSortLabel = /*#__PURE__*/React.forwardRef(function TableSortLabel(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTableSortLabel'\n  });\n  const {\n    active = false,\n    children,\n    className,\n    direction = 'asc',\n    hideSortIcon = false,\n    IconComponent = ArrowDownwardIcon,\n    slots = {},\n    slotProps = {},\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    active,\n    direction,\n    hideSortIcon,\n    IconComponent\n  };\n  const classes = useUtilityClasses(ownerState);\n  const externalForwardedProps = {\n    slots,\n    slotProps\n  };\n  const [RootSlot, rootProps] = useSlot('root', {\n    elementType: TableSortLabelRoot,\n    externalForwardedProps,\n    ownerState,\n    className: clsx(classes.root, className),\n    ref\n  });\n  const [IconSlot, iconProps] = useSlot('icon', {\n    elementType: TableSortLabelIcon,\n    externalForwardedProps,\n    ownerState,\n    className: classes.icon\n  });\n  return /*#__PURE__*/_jsxs(RootSlot, {\n    disableRipple: true,\n    component: \"span\",\n    ...rootProps,\n    ...other,\n    children: [children, hideSortIcon && !active ? null : /*#__PURE__*/_jsx(IconSlot, {\n      as: IconComponent,\n      ...iconProps\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableSortLabel.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the label will have the active styling (should be true for the sorted column).\n   * @default false\n   */\n  active: PropTypes.bool,\n  /**\n   * Label contents, the arrow will be appended automatically.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The current sort direction.\n   * @default 'asc'\n   */\n  direction: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * Hide sort icon when active is false.\n   * @default false\n   */\n  hideSortIcon: PropTypes.bool,\n  /**\n   * Sort icon to use.\n   * @default ArrowDownwardIcon\n   */\n  IconComponent: PropTypes.elementType,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    icon: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    icon: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableSortLabel;"],"names":["brokerValidationSchema","Yup","shape","brokerName","required","id","startDate","employee","nism","idType","brokerTableTitle","AdminSettings","brokerData","setBrokerData","useState","selectedBrokerFilter","setSelectedBrokerFilter","idData","setIdData","filteredIdData","setFilteredIdData","open","setOpen","editMode","setEditMode","getUserList","setGetUserList","selectedBroker","setSelectedBroker","loader","setLoader","getIdData","async","response","api","get","status","structureData","data","map","_data$idNumber","_data$employeeId","_data$nism","_data$idType","Id","idNumber","toUpperCase","recordId","Employee","employeeId","Nism","IdType","Action","_jsxs","Dropdown","children","_jsx","DropdownTrigger","IconButton","CiMenuKebab","DropdownMenu","onAction","key","releaseId","editBroker","deleteId","DropdownItem","isDisabled","error","console","handleOpen","handleClose","broker","put","concat","toast","success","warn","useEffect","getuserData","_response$data","filter","getBrokerData","initialValues","brokerId","AdminLayout","pageTitle","pageSubtitle","Card","style","marginTop","className","TextField","placeholder","InputProps","startAdornment","InputAdornment","position","IoSearch","FormControl","minWidth","marginRight","Select","value","onChange","event","target","filteredData","displayEmpty","MenuItem","index","Button","onClick","variant","color","startIcon","IoAddCircleOutline","Box","mt","CustomTable","title","tableData","loading","Modal","onClose","sx","top","left","transform","width","bgcolor","boxShadow","p","borderRadius","overflowY","Typography","Formik","validationSchema","onSubmit","values","_ref","resetForm","post","_error$response","_error$response$data","_error$response2","_error$response2$data","detail","_ref2","handleChange","errors","touched","handleBlur","Form","fullWidth","margin","name","label","onBlur","Boolean","helperText","inputProps","textTransform","InputLabel","labelId","FormHelperText","type","InputLabelProps","shrink","firstName","lastName","undefined","columnWidths","renderAction","page","setPage","rowsPerPage","setRowsPerPage","sortConfig","setSortConfig","direction","handleSort","columnKey","prevConfig","isAscending","sortedData","React","sort","a","b","Paper","TableContainer","Table","stickyHeader","TableHead","TableRow","header","TableCell","align","backgroundColor","zIndex","TableSortLabel","active","maxWidth","toLowerCase","TableBody","colSpan","length","CircularProgress","rowData","rowIndex","Object","keys","colIndex","includes","whiteSpace","overflow","textOverflow","onPress","handleButtonClick","axios","create","baseURL","timeout","interceptors","request","use","config","headers","Authorization","localStorage","getItem","Promise","reject","log","window","location","href","message","generateUtilityClasses","getMenuItemUtilityClass","slot","generateUtilityClass","_excluded","MenuItemRoot","styled","ButtonBase","shouldForwardProp","prop","rootShouldForwardProp","overridesResolver","props","styles","ownerState","root","dense","divider","disableGutters","gutters","memoTheme","theme","_objectSpread","typography","body1","display","justifyContent","alignItems","textDecoration","minHeight","paddingTop","paddingBottom","boxSizing","vars","palette","action","hover","menuItemClasses","selected","primary","mainChannel","selectedOpacity","alpha","main","focusVisible","focusOpacity","hoverOpacity","focus","disabled","opacity","disabledOpacity","dividerClasses","spacing","marginBottom","inset","marginLeft","listItemTextClasses","paddingLeft","listItemIconClasses","variants","paddingRight","_ref3","borderBottom","backgroundClip","_ref4","breakpoints","up","_ref5","body2","fontSize","inProps","ref","useDefaultProps","autoFocus","component","focusVisibleClassName","role","tabIndex","tabIndexProp","other","_objectWithoutProperties","context","ListContext","childContext","menuItemRef","useEnhancedEffect","current","classes","slots","composedClasses","composeClasses","useUtilityClasses","handleRef","useForkRef","Provider","clsx","createSvgIcon","d","getTableSortLabelUtilityClass","TableSortLabelRoot","cursor","flexDirection","text","secondary","tableSortLabelClasses","icon","TableSortLabelIcon","capitalize","transition","transitions","duration","shorter","userSelect","hideSortIcon","IconComponent","ArrowDownwardIcon","slotProps","externalForwardedProps","RootSlot","rootProps","useSlot","elementType","IconSlot","iconProps","disableRipple","as"],"sourceRoot":""}