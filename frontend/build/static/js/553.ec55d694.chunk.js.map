{"version":3,"file":"static/js/553.ec55d694.chunk.js","mappings":"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","sources":["component/pages/AuthPage.jsx","config/AxiosCofig.js","../node_modules/react-transition-group/esm/config.js","../node_modules/react-transition-group/esm/Transition.js","../node_modules/react-transition-group/esm/utils/reflow.js"],"sourcesContent":["import React from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport landingImage from \"../../assets/rb_2744.png\";\r\nimport { TextField, Button, Typography } from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {jwtDecode} from 'jwt-decode';\r\nimport { toast } from \"react-toastify\";\r\nimport api from \"../../config/AxiosCofig\";\r\n\r\nconst AuthPage = () => {\r\n  // Form validation schema using Yup\r\n  const navigate = useNavigate()\r\n  const validationSchema = Yup.object({\r\n    username: Yup.string().required(\"Username is required\"),\r\n    password: Yup.string().required(\"Password is required\"),\r\n  });\r\n\r\n  // Formik hook\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      username: \"\",\r\n      password: \"\",\r\n    },\r\n    validationSchema,\r\n    onSubmit: async (values) => {\r\n      try{\r\n        const authData = await api.post(\"/login\", values, {\r\n          headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\r\n        });\r\n        \r\n        if(authData.status===200){\r\n          localStorage.setItem('token', authData.data.access_token)\r\n          const tokenDecode = jwtDecode(authData.data.access_token);\r\n          if(tokenDecode.role===1){\r\n            navigate(\"/home\")\r\n          }\r\n          else if(tokenDecode.role===2){\r\n            navigate(\"/datamanagement\")\r\n          }\r\n          \r\n        }\r\n      }\r\n      catch(errors){\r\n        console.log(\"authData\", errors)\r\n        toast.error(errors?.response?.data?.detail)\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div className=\"authmain flex flex-row items-center\">\r\n      <div className=\"image-container\">\r\n        <img src={landingImage} alt=\"Login\" />\r\n      </div>\r\n      <div className=\"form-container\">\r\n        <div className=\"login-form-container\">\r\n          <Typography variant=\"h4\">Login</Typography>\r\n          <form onSubmit={formik.handleSubmit}>\r\n            <TextField\r\n              name=\"username\"\r\n              value={formik.values.username}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              placeholder=\"Username\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              margin=\"normal\"\r\n              className=\"input-field\"\r\n              error={formik.touched.username && Boolean(formik.errors.username)}\r\n              helperText={formik.touched.username && formik.errors.username}\r\n            />\r\n            <TextField\r\n              name=\"password\"\r\n              type=\"password\"\r\n              value={formik.values.password}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              placeholder=\"Password\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              margin=\"normal\"\r\n              className=\"input-field\"\r\n              error={formik.touched.password && Boolean(formik.errors.password)}\r\n              helperText={formik.touched.password && formik.errors.password}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              fullWidth\r\n              className=\"login-btn\"\r\n            >\r\n              Login\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthPage;\r\n","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL:'http://localhost:8000',\r\n  timeout:5000\r\n})\r\n\r\napi.interceptors.request.use(\r\n  (config)=>{\r\n    config.headers.Authorization = `Bearer ${localStorage.getItem(\"token\")}`;\r\n    return config;\r\n  },\r\n  (error) => {\r\n    // Handle request error\r\n    console.error(\"Request Interceptor Error:\", error);\r\n    return Promise.reject(error);\r\n  }\r\n)\r\n\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    console.log(\"Response Interceptor: Response received\");\r\n    return response;\r\n  },\r\n  (error) => {\r\n    if (error.response && error.response.status === 401) {\r\n      console.error(\"Response Interceptor: Unauthorized access - Redirecting to login\");\r\n    } else {\r\n      console.error(\"Response Interceptor Error:\", error.message);\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api","export default {\n  disabled: false\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport config from './config';\nimport { timeoutsShape } from './utils/PropTypes';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { forceReflow } from './utils/reflow';\nexport var UNMOUNTED = 'unmounted';\nexport var EXITED = 'exited';\nexport var ENTERING = 'entering';\nexport var ENTERED = 'entered';\nexport var EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nvar Transition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  } // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n  ;\n\n  var _proto = Transition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      if (nextStatus === ENTERING) {\n        if (this.props.unmountOnExit || this.props.mountOnEnter) {\n          var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this); // https://github.com/reactjs/react-transition-group/pull/749\n          // With unmountOnExit or mountOnEnter, the enter animation should happen at the transition between `exited` and `entering`.\n          // To make the animation happen,  we have to separate each rendering and avoid being processed as batched.\n\n          if (node) forceReflow(node);\n        }\n\n        this.performEnter(mounting);\n      } else {\n        this.performExit();\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context ? this.context.isMounting : mounting;\n\n    var _ref2 = this.props.nodeRef ? [appearing] : [ReactDOM.findDOMNode(this), appearing],\n        maybeNode = _ref2[0],\n        maybeAppearing = _ref2[1];\n\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter || config.disabled) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onEnter(maybeNode, maybeAppearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(maybeNode, maybeAppearing);\n\n      _this2.onTransitionEnd(enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(maybeNode, maybeAppearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit() {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts();\n    var maybeNode = this.props.nodeRef ? undefined : ReactDOM.findDOMNode(this); // no exit animation skip right to EXITED\n\n    if (!exit || config.disabled) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onExit(maybeNode);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(maybeNode);\n\n      _this3.onTransitionEnd(timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(maybeNode);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {\n    this.setNextCallback(handler);\n    var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],\n          maybeNode = _ref3[0],\n          maybeNextCallback = _ref3[1];\n\n      this.props.addEndListener(maybeNode, maybeNextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        _in = _this$props.in,\n        _mountOnEnter = _this$props.mountOnEnter,\n        _unmountOnExit = _this$props.unmountOnExit,\n        _appear = _this$props.appear,\n        _enter = _this$props.enter,\n        _exit = _this$props.exit,\n        _timeout = _this$props.timeout,\n        _addEndListener = _this$props.addEndListener,\n        _onEnter = _this$props.onEnter,\n        _onEntering = _this$props.onEntering,\n        _onEntered = _this$props.onEntered,\n        _onExit = _this$props.onExit,\n        _onExiting = _this$props.onExiting,\n        _onExited = _this$props.onExited,\n        _nodeRef = _this$props.nodeRef,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\", \"mountOnEnter\", \"unmountOnExit\", \"appear\", \"enter\", \"exit\", \"timeout\", \"addEndListener\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"nodeRef\"]);\n\n    return (\n      /*#__PURE__*/\n      // allows for nested Transitions\n      React.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, typeof children === 'function' ? children(status, childProps) : React.cloneElement(React.Children.only(children), childProps))\n    );\n  };\n\n  return Transition;\n}(React.Component);\n\nTransition.contextType = TransitionGroupContext;\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A React reference to DOM element that need to transition:\n   * https://stackoverflow.com/a/51127130/4671932\n   *\n   *   - When `nodeRef` prop is used, `node` is not passed to callback functions\n   *      (e.g. `onEnter`) because user already has direct access to the node.\n   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new\n   *     `nodeRef` need to be provided to `Transition` with changed `key` prop\n   *     (see\n   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).\n   */\n  nodeRef: PropTypes.shape({\n    current: typeof Element === 'undefined' ? PropTypes.any : function (propValue, key, componentName, location, propFullName, secret) {\n      var value = propValue[key];\n      return PropTypes.instanceOf(value && 'ownerDocument' in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);\n    }\n  }),\n\n  /**\n   * A `function` child can be used instead of a React element. This function is\n   * called with the current transition status (`'entering'`, `'entered'`,\n   * `'exiting'`, `'exited'`), which can be used to apply context\n   * specific props to a component.\n   *\n   * ```jsx\n   * <Transition in={this.state.in} timeout={150}>\n   *   {state => (\n   *     <MyComponent className={`fade fade-${state}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * By default the child component does not perform the enter transition when\n   * it first mounts, regardless of the value of `in`. If you want this\n   * behavior, set both `appear` and `in` to `true`.\n   *\n   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop\n   * > only adds an additional enter transition. However, in the\n   * > `<CSSTransition>` component that first enter transition does result in\n   * > additional `.appear-*` classes, that way you can choose to style it\n   * > differently.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided.\n   *\n   * You may specify a single timeout for all transitions:\n   *\n   * ```jsx\n   * timeout={500}\n   * ```\n   *\n   * or individually:\n   *\n   * ```jsx\n   * timeout={{\n   *  appear: 500,\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * - `appear` defaults to the value of `enter`\n   * - `enter` defaults to `0`\n   * - `exit` defaults to `0`\n   *\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. Timeouts are still used as a fallback if provided.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func\n} : {}; // Name the function so it is clearer in the documentation\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = UNMOUNTED;\nTransition.EXITED = EXITED;\nTransition.ENTERING = ENTERING;\nTransition.ENTERED = ENTERED;\nTransition.EXITING = EXITING;\nexport default Transition;","export var forceReflow = function forceReflow(node) {\n  return node.scrollTop;\n};"],"names":["AuthPage","navigate","useNavigate","validationSchema","Yup","username","required","password","formik","useFormik","initialValues","onSubmit","async","authData","api","post","values","headers","status","localStorage","setItem","data","access_token","tokenDecode","jwtDecode","role","errors","_errors$response","_errors$response$data","console","log","toast","error","response","detail","_jsxs","className","children","_jsx","src","landingImage","alt","Typography","variant","handleSubmit","TextField","name","value","onChange","handleChange","onBlur","handleBlur","placeholder","fullWidth","margin","touched","Boolean","helperText","type","Button","color","axios","create","baseURL","timeout","interceptors","request","use","config","Authorization","concat","getItem","Promise","reject","message","UNMOUNTED","EXITED","ENTERING","ENTERED","EXITING","Transition","_React$Component","props","context","_this","call","this","initialStatus","appear","isMounting","enter","appearStatus","in","unmountOnExit","mountOnEnter","state","nextCallback","_inheritsLoose","getDerivedStateFromProps","_ref","prevState","_proto","prototype","componentDidMount","updateStatus","componentDidUpdate","prevProps","nextStatus","componentWillUnmount","cancelNextCallback","getTimeouts","exit","undefined","mounting","node","nodeRef","current","ReactDOM","findDOMNode","scrollTop","forceReflow","performEnter","performExit","setState","_this2","appearing","_ref2","maybeNode","maybeAppearing","timeouts","enterTimeout","safeSetState","onEntered","onEnter","onEntering","onTransitionEnd","_this3","onExit","onExiting","onExited","cancel","nextState","callback","setNextCallback","_this4","active","event","handler","doesNotHaveTimeoutOrListener","addEndListener","_ref3","maybeNextCallback","setTimeout","render","_this$props","childProps","_objectWithoutPropertiesLoose","React","TransitionGroupContext","Provider","only","noop","contextType","propTypes","defaultProps"],"sourceRoot":""}