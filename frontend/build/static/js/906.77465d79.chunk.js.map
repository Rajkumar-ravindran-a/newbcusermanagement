{"version":3,"file":"static/js/906.77465d79.chunk.js","mappings":"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","sources":["component/Model.jsx","component/table/Table.jsx","component/pages/Dashboard.jsx","config/AxiosCofig.js"],"sourcesContent":["import Modal from '@mui/material/Modal';\r\nimport React from 'react'\r\nimport { Box } from '@mui/material';\r\n\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  // width: 400,\r\n  bgcolor: 'background.paper',\r\n  // border: '2px solid #000',\r\n  boxShadow: 24,\r\n  p: 4,\r\n  borderRadius:'1rem'\r\n};\r\n\r\nconst ModelPoper = ({open, handleClose, children}) => {\r\n  return (\r\n    <Modal\r\n    open={open}\r\n    onClose={handleClose}\r\n    aria-labelledby=\"modal-modal-title\"\r\n    aria-describedby=\"modal-modal-description\"\r\n  >\r\n    <Box sx={style}>\r\n     {children}\r\n    </Box>\r\n  </Modal>\r\n  )\r\n}\r\n\r\nexport default ModelPoper","import React, { useState } from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Avatar,\r\n  Button,\r\n  Pagination,\r\n  Typography,\r\n  TextField,\r\n  Paper,\r\n} from \"@mui/material\";\r\n\r\nconst statusColorMap = {\r\n  Active: \"success\",\r\n  paused: \"warning\",\r\n  deleted: \"error\",\r\n};\r\n\r\nexport const columns = [\r\n  { name: \"User ID\", key: \"id\" },\r\n  { name: \"NAME\", key: \"name\" },\r\n  { name: \"ROLE\", key: \"role\" },\r\n  { name: \"STATUS\", key: \"userStatus\" },\r\n  { name: \"ACTIONS\", key: \"actions\" },\r\n];\r\n\r\nconst TableComponent = ({ Userdata }) => {\r\n  console.log(\"userData\", Userdata);\r\n  const [page, setPage] = useState(1);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n\r\n  // Pagination Logic\r\n  const startIndex = (page - 1) * rowsPerPage;\r\n  const endIndex = startIndex + rowsPerPage;\r\n  const paginatedData = Userdata.slice(startIndex, endIndex);\r\n\r\n  const handlePageChange = (event, value) => {\r\n    setPage(value);\r\n  };\r\n\r\n  const renderCell = (user, columnKey) => {\r\n    const cellValue = user[columnKey] || \"N/A\";\r\n\r\n    switch (columnKey) {\r\n      case \"id\":\r\n        return (\r\n          <div style={{ display: \"flex\", alignItems: \"center\", justifyContent:\"center\" }}>{user.id}</div>\r\n        );\r\n\r\n      case \"name\":\r\n        return (\r\n          <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n            <Avatar\r\n              src={user.avatar}\r\n              alt={user.firstName}\r\n              style={{ marginRight: \"10px\" }}\r\n            >\r\n              {user.firstName?.charAt(0)?.toUpperCase() || \"\"}\r\n            </Avatar>\r\n            <div>\r\n              <Typography variant=\"body1\">\r\n                {user.firstName + \" \" + user.lastName}\r\n              </Typography>\r\n              <Typography variant=\"caption\" color=\"textSecondary\">\r\n                {user.email}\r\n              </Typography>\r\n            </div>\r\n          </div>\r\n        );\r\n      case \"role\":\r\n        return (\r\n          <div>\r\n            <Typography variant=\"body1\">{cellValue}</Typography>\r\n            <Typography variant=\"body2\" color=\"textSecondary\">\r\n              {user.team}\r\n            </Typography>\r\n          </div>\r\n        );\r\n      case \"userStatus\":\r\n        return (\r\n          <Typography\r\n            variant=\"body2\"\r\n            color={\r\n              statusColorMap[user.userStatus] || \"textSecondary\"\r\n            } /* Color dynamically based on status */\r\n          >\r\n            {cellValue}\r\n          </Typography>\r\n        );\r\n      case \"actions\":\r\n        return (\r\n          <div style={{ display: \"flex\", gap: \"10px\" }}>\r\n            <Button variant=\"outlined\" color=\"primary\" size=\"small\">\r\n              Details\r\n            </Button>\r\n            <Button variant=\"outlined\" color=\"secondary\" size=\"small\">\r\n              Edit\r\n            </Button>\r\n            <Button variant=\"outlined\" color=\"error\" size=\"small\">\r\n              Delete\r\n            </Button>\r\n          </div>\r\n        );\r\n      default:\r\n        return cellValue;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TableContainer>\r\n        <Table sx={{ minHidth: \"650px\" }} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.key}\r\n                  style={{ fontWeight: \"bold\", textTransform: \"uppercase\" }}\r\n                >\r\n                  {column.name}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {paginatedData.length > 0 ? (\r\n              paginatedData.map((user) => (\r\n                <TableRow key={user.id} hover>\r\n                  {columns.map((column) => (\r\n                    <TableCell key={column.key}>\r\n                      {renderCell(user, column.key)}\r\n                    </TableCell>\r\n                  ))}\r\n                </TableRow>\r\n              ))\r\n            ) : (\r\n              <TableRow>\r\n                <TableCell\r\n                  colSpan={columns.length}\r\n                  align=\"center\"\r\n                  style={{ height: \"200px\" }}\r\n                >\r\n                  No data available\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n          marginTop: \"16px\",\r\n        }}\r\n      >\r\n        <div style={{ display: \"flex\", alignItems: \"center\", gap: \"8px\" }}>\r\n          <Typography variant=\"body2\">Rows per page:</Typography>\r\n          <TextField\r\n            type=\"number\"\r\n            value={rowsPerPage}\r\n            onChange={(e) => setRowsPerPage(parseInt(e.target.value, 10) || 5)}\r\n            style={{ width: \"60px\" }}\r\n            size=\"small\"\r\n          />\r\n        </div>\r\n        <Pagination\r\n          count={Math.ceil(Userdata.length / rowsPerPage)}\r\n          page={page}\r\n          onChange={handlePageChange}\r\n          color=\"primary\"\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TableComponent;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport AdminLayout from \"../layouts/AdminLayout\";\r\nimport TableComponent from \"../table/Table\";\r\nimport { TextField, Typography, Button } from \"@mui/material\";\r\nimport ModelPoper from \"../Model\";\r\nimport { Formik, Field, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { toast } from \"react-toastify\";\r\nimport api from \"../../config/AxiosCofig\";\r\nimport { IoAddCircleOutline, IoSearch } from \"react-icons/io5\";\r\nimport { Input } from \"@nextui-org/react\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport { Card, Select, SelectItem } from \"@nextui-org/react\";\r\n\r\nconst Dashboard = () => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const [userData, setUserData] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState(\"\"); // State for search query\r\n  const [modelPopup, setModelPopup] = useState(false);\r\n\r\n  // Fetch all users\r\n  const getAllUsers = async () => {\r\n    try {\r\n      const allusers = await api.get(\"/users\", {\r\n        headers: {\r\n          Authorization: `bearer ${token}`,\r\n        },\r\n      });\r\n      if (allusers.status === 200) {\r\n        setUserData(allusers.data);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching users:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllUsers();\r\n  }, []);\r\n\r\n  // Filter users based on search query\r\n  const filteredUsers = userData.filter((user) => {\r\n    const query = searchQuery.toLowerCase();\r\n    return (\r\n      user.firstName.toLowerCase().includes(query) ||\r\n      user.lastName.toLowerCase().includes(query)\r\n    );\r\n  });\r\n\r\n  // Validation schema for form\r\n  const validationSchema = Yup.object({\r\n    firstName: Yup.string().required(\"First Name is required\"),\r\n    lastName: Yup.string().required(\"Last Name is required\"),\r\n    email: Yup.string()\r\n      .email(\"Invalid email format\")\r\n      .required(\"Email is required\"),\r\n    role: Yup.string().required(\"Role is required\"),\r\n    phonenumber: Yup.string().required(\"Mobile number is required\"),\r\n    password: Yup.string().required(\"Password is required\"),\r\n  });\r\n\r\n  // Initial form values\r\n  const initialValues = {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    role: \"\",\r\n    password: \"\",\r\n    phonenumber: \"\",\r\n  };\r\n\r\n  // Handle modal popup toggle\r\n  const handleModelPopup = () => {\r\n    setModelPopup(!modelPopup);\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (values) => {\r\n    try {\r\n      const response = await api.post(\"/register\", values, {\r\n        headers: {\r\n          Authorization: `bearer ${token}`,\r\n        },\r\n      });\r\n      if (response.status === 200) {\r\n        toast.success(\"User added successfully\");\r\n        getAllUsers();\r\n        setModelPopup(false);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error adding user:\", error?.response?.data?.detail);\r\n      toast.error(error?.response?.data?.detail);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AdminLayout pageTitle=\"All users\" pageSubtitle=\"Manage user details\">\r\n      <ModelPoper open={modelPopup} handleClose={handleModelPopup}>\r\n        <Typography variant=\"h6\" className=\"mb-2\">\r\n          Add user\r\n        </Typography>\r\n        <Formik\r\n          initialValues={initialValues}\r\n          validationSchema={validationSchema}\r\n          onSubmit={handleSubmit}\r\n        >\r\n          {({ errors, touched }) => (\r\n            <Form>\r\n              <div className=\"flex gap-4 mb-3\">\r\n                <div className=\"flex-1\">\r\n                  <Field\r\n                    name=\"firstName\"\r\n                    as={Input}\r\n                    label=\"First Name\"\r\n                    placeholder=\"Enter First Name\"\r\n                  />\r\n                  {touched.firstName && errors.firstName && (\r\n                    <div className=\"text-red-500 text-sm\">\r\n                      {errors.firstName}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"flex-1\">\r\n                  <Field\r\n                    name=\"lastName\"\r\n                    as={Input}\r\n                    label=\"Last Name\"\r\n                    placeholder=\"Enter Last Name\"\r\n                  />\r\n                  {touched.lastName && errors.lastName && (\r\n                    <div className=\"text-red-500 text-sm\">\r\n                      {errors.lastName}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"mb-3\">\r\n                <Field\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  as={Input}\r\n                  label=\"Email\"\r\n                  placeholder=\"Enter Your Email\"\r\n                />\r\n                {touched.email && errors.email && (\r\n                  <div className=\"text-red-500 text-sm\">{errors.email}</div>\r\n                )}\r\n              </div>\r\n              <div className=\"mb-3\">\r\n                <Field\r\n                  name=\"phonenumber\"\r\n                  as={Input}\r\n                  label=\"Phone Number\"\r\n                  placeholder=\"Enter Phone Number\"\r\n                />\r\n                {touched.phonenumber && errors.phonenumber && (\r\n                  <div className=\"text-red-500 text-sm\">\r\n                    {errors.phonenumber}\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <div className=\"mb-3\">\r\n                <Field\r\n                  name=\"role\"\r\n                  as={Select}\r\n                  label=\"Role\"\r\n                  placeholder=\"Select Role\"\r\n                >\r\n                  <SelectItem key=\"2\">Employee</SelectItem>\r\n                </Field>\r\n                {touched.role && errors.role && (\r\n                  <div className=\"text-red-500 text-sm\">{errors.role}</div>\r\n                )}\r\n              </div>\r\n              <div className=\"mb-3\">\r\n                <Field\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  as={Input}\r\n                  label=\"Password\"\r\n                  placeholder=\"Enter Password\"\r\n                />\r\n                {touched.password && errors.password && (\r\n                  <div className=\"text-red-500 text-sm\">{errors.password}</div>\r\n                )}\r\n              </div>\r\n              <div className=\"mt-4 flex gap-4\">\r\n                <Button\r\n                  type=\"submit\"\r\n                  className=\"mr-3 submit-btn\"\r\n                  variant=\"contained\"\r\n                >\r\n                  Add User\r\n                </Button>\r\n                <Button variant=\"flat\" onClick={handleModelPopup}>\r\n                  Cancel\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </ModelPoper>\r\n      <Card className=\"p-3 mt-4 userMainCard\">\r\n        <div className=\"flex flex-col flex-1\">\r\n          <div className=\"flex justify-between\">\r\n            <TextField\r\n              className=\"searchUser\"\r\n              placeholder=\"Search\"\r\n              value={searchQuery}\r\n              onChange={(e) => setSearchQuery(e.target.value)}\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <IoSearch />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n            <Button\r\n              className=\"h-5 mb-4 addUserButton\"\r\n              onClick={() => handleModelPopup()}\r\n              variant=\"outlined\"\r\n              startIcon={<IoAddCircleOutline />}\r\n            >\r\n              Add New Employee\r\n            </Button>\r\n          </div>\r\n          {console.log(filteredUsers)}\r\n          <TableComponent Userdata={filteredUsers} />\r\n        </div>\r\n      </Card>\r\n    </AdminLayout>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL:'http://43.204.150.47:8000',\r\n  timeout:5000\r\n})\r\n\r\n\r\napi.interceptors.request.use(\r\n  (config)=>{\r\n    config.headers.Authorization = `Bearer ${localStorage.getItem(\"token\")}`;\r\n    return config;\r\n  },\r\n  (error) => {\r\n    // Handle request error\r\n    console.error(\"Request Interceptor Error:\", error);\r\n    return Promise.reject(error);\r\n  }\r\n)\r\n\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    console.log(\"Response Interceptor: Response received\");\r\n    return response;\r\n  },\r\n  (error) => {\r\n    if (error.response && error.response.status === 401) {\r\n      console.error(\"Response Interceptor: Unauthorized access - Redirecting to login\");\r\n    } else {\r\n      console.error(\"Response Interceptor Error:\", error.message);\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api"],"names":["style","position","top","left","transform","bgcolor","boxShadow","p","borderRadius","_ref","open","handleClose","children","_jsx","Modal","onClose","Box","sx","statusColorMap","Active","paused","deleted","columns","name","key","Userdata","console","log","page","setPage","useState","rowsPerPage","setRowsPerPage","startIndex","endIndex","paginatedData","slice","renderCell","user","columnKey","_user$firstName","_user$firstName$charA","cellValue","display","alignItems","justifyContent","id","_jsxs","Avatar","src","avatar","alt","firstName","marginRight","charAt","toUpperCase","Typography","variant","lastName","color","email","team","userStatus","gap","Button","size","_Fragment","TableContainer","Table","minHidth","TableHead","TableRow","map","column","TableCell","fontWeight","textTransform","TableBody","length","hover","colSpan","align","height","marginTop","TextField","type","value","onChange","e","parseInt","target","width","Pagination","count","Math","ceil","handlePageChange","event","Dashboard","token","localStorage","getItem","userData","setUserData","searchQuery","setSearchQuery","modelPopup","setModelPopup","getAllUsers","async","allusers","api","get","headers","Authorization","concat","status","data","error","useEffect","filteredUsers","filter","query","toLowerCase","includes","validationSchema","Yup","required","role","phonenumber","password","handleModelPopup","AdminLayout","pageTitle","pageSubtitle","ModelPoper","className","Formik","initialValues","onSubmit","post","values","toast","success","_error$response","_error$response$data","_error$response2","_error$response2$data","response","detail","errors","touched","Form","Field","as","Input","label","placeholder","Select","SelectItem","onClick","Card","InputProps","startAdornment","InputAdornment","IoSearch","startIcon","IoAddCircleOutline","TableComponent","axios","create","baseURL","timeout","interceptors","request","use","config","Promise","reject","message"],"sourceRoot":""}