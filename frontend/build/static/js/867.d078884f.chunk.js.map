{"version":3,"file":"static/js/867.d078884f.chunk.js","mappings":"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","sources":["component/popups/BrokerFormPopup.jsx","component/pages/SettingsPage.jsx","component/table/CustomTable.jsx","config/AxiosCofig.js"],"sourcesContent":["import { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Button, TextField, Typography, Modal, Box } from \"@mui/material\";\r\nimport api from \"../../config/AxiosCofig.js\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n// Validation Schema\r\nconst brokerValidationSchema = Yup.object().shape({\r\n  brokerName: Yup.string().required(\"Broker Name is required\"),\r\n  grossFund: Yup.number()\r\n    .typeError(\"Gross Fund must be a number\")\r\n    .required(\"Gross Fund is required\"),\r\n  arbitrageFund: Yup.number()\r\n    .typeError(\"Arbitrage Fund must be a number\")\r\n    .required(\"Arbitrage Fund is required\"),\r\n  propFund: Yup.number()\r\n    .typeError(\"Prop Fund must be a number\")\r\n    .required(\"Prop Fund is required\"),\r\n  interest: Yup.number()\r\n    .typeError(\"Interest must be a number\")\r\n    .required(\"Interest is required\"),\r\n  sharing: Yup.number()\r\n    .typeError(\"Sharing must be a number\")\r\n    .required(\"Sharing is required\"),\r\n  costPerCr: Yup.number()\r\n    .typeError(\"Cost must be a number\")\r\n    .required(\"Cost is required\"),\r\n});\r\n\r\nconst BrokerFormPopup = ({ open, handleClose, onFormSubmit, brokerData }) => {\r\n  console.log(brokerData);\r\n  const initialValues = {\r\n    id: brokerData?.id || null,\r\n    brokerName: brokerData?.brokerName || \"\",\r\n    grossFund: brokerData?.grossfund || null,\r\n    arbitrageFund: brokerData?.arbitragefund || null,\r\n    propFund: brokerData?.propfund || null,\r\n    interest: brokerData?.intrest || null,\r\n    sharing: brokerData?.shares || null,\r\n    costPerCr: brokerData?.costPerCr || null,\r\n  };\r\n\r\n  const handleSubmit = async (values, { resetForm }) => {\r\n    try {\r\n      if (values.id) {\r\n        await api.put(`/updateBroker/${values.id}`, values);\r\n        toast.success(\"Broker updated successfully.\");\r\n      } else {\r\n        console.log(values);\r\n        await api.post(\"/createBroker\", values);\r\n        toast.success(\"Broker added successfully.\");\r\n      }\r\n      onFormSubmit();\r\n      resetForm();\r\n      handleClose();\r\n    } catch (error) {\r\n      console.log(error?.response?.data);\r\n      toast.error(error?.response?.data?.detail);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal open={open} onClose={handleClose}>\r\n      <Box\r\n        sx={{\r\n          position: \"absolute\",\r\n          top: \"50%\",\r\n          left: \"50%\",\r\n          transform: \"translate(-50%, -50%)\",\r\n          width: 600,\r\n          height: 560,\r\n          bgcolor: \"background.paper\",\r\n          boxShadow: 24,\r\n          p: 4,\r\n          borderRadius: 2,\r\n          overflowY: \"scroll\",\r\n        }}\r\n      >\r\n        <Typography variant=\"h6\" sx={{ marginBottom: \"20px\" }}>\r\n          {initialValues.id ? \"Update Broker\" : \"Add Broker\"}\r\n        </Typography>\r\n\r\n        <Formik\r\n          initialValues={initialValues}\r\n          validationSchema={brokerValidationSchema}\r\n          onSubmit={handleSubmit}\r\n          enableReinitialize\r\n        >\r\n          {({\r\n            values,\r\n            errors,\r\n            touched,\r\n            handleChange,\r\n            handleBlur,\r\n            setFieldValue,\r\n          }) => (\r\n            <Form>\r\n              <div className=\"flex flex-col gap-2\">\r\n                <TextField\r\n                  name=\"brokerName\"\r\n                  label=\"Broker Name\"\r\n                  value={values.brokerName}\r\n                  onChange={(e) =>\r\n                    handleChange({\r\n                      target: {\r\n                        name: e.target.name,\r\n                        value: e.target.value.toUpperCase(),\r\n                      },\r\n                    })\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  error={touched.brokerName && Boolean(errors.brokerName)}\r\n                  helperText={touched.brokerName && errors.brokerName}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n                <TextField\r\n                  name=\"grossFund\"\r\n                  label=\"Gross Fund (1Cr)\"\r\n                  value={values.grossFund}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  error={touched.grossFund && Boolean(errors.grossFund)}\r\n                  helperText={touched.grossFund && errors.grossFund}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n                <TextField\r\n                  name=\"arbitrageFund\"\r\n                  label=\"Arbitrage Fund (1Cr)\"\r\n                  value={values.arbitrageFund}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  error={touched.arbitrageFund && Boolean(errors.arbitrageFund)}\r\n                  helperText={touched.arbitrageFund && errors.arbitrageFund}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n                <TextField\r\n                  name=\"propFund\"\r\n                  label=\"Prop Fund (1Cr)\"\r\n                  value={values.propFund}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  error={touched.propFund && Boolean(errors.propFund)}\r\n                  helperText={touched.propFund && errors.propFund}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n                <div className=\"flex gap-2\">\r\n                  <TextField\r\n                    name=\"interest\"\r\n                    label=\"Interest (PA) %\"\r\n                    value={values.interest}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    error={touched.interest && Boolean(errors.interest)}\r\n                    helperText={touched.interest && errors.interest}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                  />\r\n                  <TextField\r\n                    name=\"sharing\"\r\n                    label=\"Sharing (Base) %\"\r\n                    value={values.sharing}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    error={touched.sharing && Boolean(errors.sharing)}\r\n                    helperText={touched.sharing && errors.sharing}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                  />\r\n                  <TextField\r\n                    name=\"costPerCr\"\r\n                    label=\"Cost (Per Cr)\"\r\n                    value={values.costPerCr}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    error={touched.costPerCr && Boolean(errors.costPerCr)}\r\n                    helperText={touched.costPerCr && errors.costPerCr}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div style={{ marginTop: \"20px\" }}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  onClick={handleClose}\r\n                  style={{ marginRight: \"10px\" }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                  {initialValues.id ? \"Update Broker\" : \"Add Broker\"}\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Box>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default BrokerFormPopup;\r\n","import { useState, useEffect, useCallback } from \"react\";\r\nimport { Button, TextField, IconButton } from \"@mui/material\";\r\nimport CustomTable from \"../table/CustomTable.jsx\";\r\nimport AdminLayout from \"../layouts/AdminLayout.jsx\";\r\nimport api from \"../../config/AxiosCofig.js\";\r\nimport { toast } from \"react-toastify\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport BrokerFormPopup from \"../popups/BrokerFormPopup.jsx\";\r\nimport { Card } from \"@nextui-org/react\";\r\nimport { IoSearch, IoAddCircleOutline } from \"react-icons/io5\";\r\nimport { CiMenuKebab } from \"react-icons/ci\";\r\nimport {\r\n  Dropdown,\r\n  DropdownTrigger,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n} from \"@nextui-org/react\";\r\n\r\n// Column Titles\r\n// const brokerTableTitle = [\r\n//   \"Broker Name\",\r\n//   \"Start Date\",\r\n//   \"Release Date\",\r\n//   \"Gross Fund\",\r\n//   \"Arbitrage Fund\",\r\n//   \"Total Fund\",\r\n//   \"Prop Fund\",\r\n//   \"Action\",\r\n// ];\r\n\r\nconst brokerTableTitle = [\r\n  \"BrokerName\",\r\n  \"GrossFund\",\r\n  \"ArbitrageFund\",\r\n  \"PropFund\",\r\n  \"Interest\",\r\n  \"Sharing\",\r\n  \"CostPerCr\",\r\n  \"Total Fund\",\r\n  \"Start Date\",\r\n  \"Realease Date\",\r\n  \"Action\",\r\n];\r\n\r\nconst AdminSettings = () => {\r\n  const [brokerData, setBrokerData] = useState([]);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [loader, setLoader] = useState(false);\r\n  const [selectedBroker, setSelectedBroker] = useState(null);\r\n\r\n  // Fetch Brokers Data\r\n  const getBrokerData = useCallback(async () => {\r\n    setLoader(true);\r\n    try {\r\n      const response = await api.get(\"/getAllBroker\");\r\n      if (response.status === 200) {\r\n        const formattedData = response.data?.data?.map((broker) => ({\r\n          \"Broker Name\": broker.brokerName,\r\n          \"Gross Fund\": broker.grossfund || \"-\",\r\n          \"Arbitrage Fund\": broker.arbitragefund || \"-\",\r\n          \"Prop Fund\": broker.propfund || \"-\",\r\n          \"Intrest\": broker.intrest || \"-\",\r\n          \"shares\": broker.shares || \"-\",\r\n          \"costPerCr\": broker.costPerCr || \"-\",\r\n          \"Total Fund\": broker.grossfund + broker.arbitragefund || \"-\",\r\n          \"Start Date\": broker.startDate || \"-\",\r\n          \"Release Date\": broker.releaseDate || \"-\",\r\n          Action: (\r\n            <Dropdown>\r\n              <DropdownTrigger>\r\n                <IconButton>\r\n                  <CiMenuKebab />\r\n                </IconButton>\r\n              </DropdownTrigger>\r\n              <DropdownMenu\r\n                aria-label=\"Action menu\"\r\n                onAction={(key) => handleDropdownAction(key, broker)}\r\n              >\r\n                <DropdownItem key=\"release\" isDisabled={broker.status === 3}>\r\n                  Release\r\n                </DropdownItem>\r\n                <DropdownItem key=\"edit\" isDisabled={broker.status === 3}>\r\n                  Edit\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </Dropdown>\r\n          ),\r\n        }));\r\n        setBrokerData(formattedData);\r\n      } else {\r\n        toast.error(\"Failed to fetch broker data.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.error(\"Error fetching broker data.\");\r\n    } finally {\r\n      setLoader(false);\r\n    }\r\n  }, []);\r\n\r\n  // Handle Dropdown Actions\r\n  const handleDropdownAction = (action, broker) => {\r\n    if (action === \"release\") {\r\n      releaseBroker(broker);\r\n    } else if (action === \"edit\") {\r\n      setSelectedBroker(broker); \r\n      setAnchorEl(document.body); \r\n    }\r\n  };\r\n\r\n  // Release Broker\r\n  const releaseBroker = async (broker) => {\r\n    try {\r\n      const response = await api.put(`/releaseBroker/${broker.id}/3`);\r\n      if (response.status === 200) {\r\n        toast.success(`Broker \"${broker.brokerName}\" released successfully.`);\r\n        getBrokerData();\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.error(\"Error releasing broker.\");\r\n    }\r\n  };\r\n\r\n  // Open and Close Popover\r\n  const handleClickPopover = (event) => setAnchorEl(event.currentTarget);\r\n  const handleClosePopover = () => {\r\n    setAnchorEl(null);\r\n    setSelectedBroker(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBrokerData();\r\n  }, [getBrokerData]);\r\n\r\n  return (\r\n    <AdminLayout\r\n      pageTitle=\"Brokers\"\r\n      pageSubtitle=\"Add, view, and release brokers\"\r\n    >\r\n      <Card\r\n        className=\"settings-mainCard\"\r\n        style={{ marginTop: \"1rem\", width: \"100%\", overflowY: \"scroll\" }}\r\n      >\r\n        <div className=\"flex justify-between p-4 align-middle broker-form\">\r\n          <TextField\r\n            className=\"searchUser\"\r\n            placeholder=\"Search\"\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <IoSearch />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleClickPopover}\r\n            startIcon={<IoAddCircleOutline />}\r\n          >\r\n            Add Broker\r\n          </Button>\r\n        </div>\r\n\r\n        <BrokerFormPopup\r\n          anchorEl={anchorEl}\r\n          open={Boolean(anchorEl)}\r\n          handleClose={handleClosePopover}\r\n          onFormSubmit={getBrokerData}\r\n          brokerData={selectedBroker}\r\n        />\r\n\r\n        <div className=\"mt-4\">\r\n          <CustomTable\r\n            columnWidths={[\r\n              \"10%\",\r\n              \"10%\",\r\n              \"10%\",\r\n              \"10%\",\r\n              \"15%\",\r\n              \"10%\",\r\n              \"10%\",\r\n              \"10%\",\r\n              \"40%\",\r\n              \"15%\",\r\n              \"10%\",\r\n            ]}\r\n            title={brokerTableTitle}\r\n            tableData={brokerData}\r\n            loading={loader}\r\n          />\r\n        </div>\r\n      </Card>\r\n    </AdminLayout>\r\n  );\r\n};\r\n\r\nexport default AdminSettings;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  TablePagination,\r\n  TableSortLabel,\r\n  CircularProgress,\r\n} from \"@mui/material\";\r\nimport { Button } from \"@nextui-org/react\";\r\n\r\nconst CustomTable = ({\r\n  title = [],\r\n  columnWidths = [], // Dynamic column widths\r\n  tableData = [],\r\n  renderAction,\r\n  loading,\r\n}) => {\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const [sortConfig, setSortConfig] = useState({ key: \"\", direction: \"asc\" });\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleSort = (columnKey) => {\r\n    setSortConfig((prevConfig) => {\r\n      const isAscending =\r\n        prevConfig.key === columnKey && prevConfig.direction === \"asc\";\r\n      return {\r\n        key: columnKey,\r\n        direction: isAscending ? \"desc\" : \"asc\",\r\n      };\r\n    });\r\n  };\r\n\r\n  const sortedData = React.useMemo(() => {\r\n    if (!sortConfig.key) return tableData;\r\n    return [...tableData].sort((a, b) => {\r\n      if (a[sortConfig.key] < b[sortConfig.key]) {\r\n        return sortConfig.direction === \"asc\" ? -1 : 1;\r\n      }\r\n      if (a[sortConfig.key] > b[sortConfig.key]) {\r\n        return sortConfig.direction === \"asc\" ? 1 : -1;\r\n      }\r\n      return 0;\r\n    });\r\n  }, [tableData, sortConfig]);\r\n\r\n  const paginatedData = sortedData.slice(\r\n    page * rowsPerPage,\r\n    page * rowsPerPage + rowsPerPage\r\n  );\r\n\r\n  const handleButtonClick = (status, id) => {\r\n    if (status === 1) {\r\n      renderAction(id);\r\n    } else {\r\n      renderAction();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper className=\"custom\">\r\n      <TableContainer>\r\n        <Table className=\"tble-custom\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {title.map((header, index) => (\r\n                <TableCell\r\n                  key={index}\r\n                  align=\"center\"\r\n                  sx={{\r\n                    fontWeight: \"bold\",\r\n                    width: columnWidths[index] || \"auto\", // Set fixed width if provided\r\n                    minWidth: columnWidths[index] || 150, // Prevent shrinking\r\n                    maxWidth: columnWidths[index] || 300, // Optional: Limit max width\r\n                  }}\r\n                >\r\n                  <TableSortLabel\r\n                    active={sortConfig.key === header.toLowerCase()}\r\n                    direction={\r\n                      sortConfig.key === header.toLowerCase()\r\n                        ? sortConfig.direction\r\n                        : \"asc\"\r\n                    }\r\n                    onClick={() => handleSort(header.toLowerCase())}\r\n                  >\r\n                    {header}\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n          <TableBody>\r\n            {loading && (\r\n              <TableRow>\r\n                <TableCell colSpan={title.length} className=\"middle-noData\">\r\n                  <CircularProgress />\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n            {paginatedData.map((rowData, rowIndex) => (\r\n              <TableRow key={rowIndex}>\r\n                {Object.keys(rowData).map((key, colIndex) => {\r\n                  if (\r\n                    [\r\n                      \"status\",\r\n                      \"id\",\r\n                      \"brokerId\",\r\n                      \"fundAllocated\",\r\n                      \"Record Id\",\r\n                    ].includes(key)\r\n                  )\r\n                    return null;\r\n                  return (\r\n                    <TableCell\r\n                      key={`${rowIndex}-${colIndex}`}\r\n                      align=\"center\"\r\n                      sx={{\r\n                        width: columnWidths[colIndex] || \"auto\", // Use dynamic width\r\n                        minWidth: columnWidths[colIndex] || 150, // Prevent shrinking\r\n                        maxWidth: columnWidths[colIndex] || 300, // Optional: Limit max width\r\n                        whiteSpace: \"nowrap\", // Prevent text wrapping\r\n                        overflow: \"hidden\",\r\n                        textOverflow: \"ellipsis\", // Ellipsis for overflow text\r\n                      }}\r\n                    >\r\n                      {key === \"action\" && renderAction ? (\r\n                        <Button\r\n                          isDisabled={rowData[\"status\"] === 3}\r\n                          onPress={() =>\r\n                            handleButtonClick(rowData[\"status\"], rowData[\"id\"])\r\n                          }\r\n                        >\r\n                          {rowData[\"status\"] === 1 ? \"Release\" : \"Released\"}\r\n                        </Button>\r\n                      ) : (\r\n                        rowData[key]\r\n                      )}\r\n                    </TableCell>\r\n                  );\r\n                })}\r\n              </TableRow>\r\n            ))}\r\n            {!loading && paginatedData && paginatedData.length === 0 && (\r\n              <TableRow>\r\n                <TableCell\r\n                  colSpan={title.length}\r\n                  className=\"middle-noData\"\r\n                  align=\"center\"\r\n                >\r\n                  No data found.\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n      {/* Pagination at the end */}\r\n      <TablePagination\r\n        component=\"div\"\r\n        count={tableData.length}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        rowsPerPage={rowsPerPage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n        rowsPerPageOptions={[5, 10, 15]}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default CustomTable;\r\n","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL:'http://43.204.150.47:8000',\r\n  timeout:5000\r\n})\r\n\r\n\r\napi.interceptors.request.use(\r\n  (config)=>{\r\n    config.headers.Authorization = `Bearer ${localStorage.getItem(\"token\")}`;\r\n    return config;\r\n  },\r\n  (error) => {\r\n    // Handle request error\r\n    console.error(\"Request Interceptor Error:\", error);\r\n    return Promise.reject(error);\r\n  }\r\n)\r\n\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    console.log(\"Response Interceptor: Response received\");\r\n    return response;\r\n  },\r\n  (error) => {\r\n    if (error.response && error.response.status === 401) {\r\n      console.error(\"Response Interceptor: Unauthorized access - Redirecting to login\");\r\n    } else {\r\n      console.error(\"Response Interceptor Error:\", error.message);\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api"],"names":["brokerValidationSchema","Yup","shape","brokerName","required","grossFund","typeError","arbitrageFund","propFund","interest","sharing","costPerCr","_ref","open","handleClose","onFormSubmit","brokerData","console","log","initialValues","id","grossfund","arbitragefund","propfund","intrest","shares","_jsx","Modal","onClose","children","_jsxs","Box","sx","position","top","left","transform","width","height","bgcolor","boxShadow","p","borderRadius","overflowY","Typography","variant","marginBottom","Formik","validationSchema","onSubmit","async","values","_ref2","resetForm","api","put","concat","toast","success","post","error","_error$response","_error$response2","_error$response2$data","response","data","detail","enableReinitialize","_ref3","errors","touched","handleChange","handleBlur","setFieldValue","Form","className","TextField","name","label","value","onChange","e","target","toUpperCase","onBlur","Boolean","helperText","fullWidth","margin","style","marginTop","Button","color","onClick","marginRight","type","brokerTableTitle","AdminSettings","setBrokerData","useState","anchorEl","setAnchorEl","loader","setLoader","selectedBroker","setSelectedBroker","getBrokerData","useCallback","get","status","_response$data","_response$data$data","formattedData","map","broker","startDate","releaseDate","Action","Dropdown","DropdownTrigger","IconButton","CiMenuKebab","DropdownMenu","onAction","key","handleDropdownAction","DropdownItem","isDisabled","action","releaseBroker","document","body","useEffect","AdminLayout","pageTitle","pageSubtitle","Card","placeholder","InputProps","startAdornment","InputAdornment","IoSearch","event","currentTarget","startIcon","IoAddCircleOutline","BrokerFormPopup","handleClosePopover","CustomTable","columnWidths","title","tableData","loading","renderAction","page","setPage","rowsPerPage","setRowsPerPage","sortConfig","setSortConfig","direction","paginatedData","React","sort","a","b","slice","Paper","TableContainer","Table","TableHead","TableRow","header","index","TableCell","align","fontWeight","minWidth","maxWidth","TableSortLabel","active","toLowerCase","handleSort","columnKey","prevConfig","isAscending","TableBody","colSpan","length","CircularProgress","rowData","rowIndex","Object","keys","colIndex","includes","whiteSpace","overflow","textOverflow","onPress","handleButtonClick","TablePagination","component","count","onPageChange","handleChangePage","newPage","onRowsPerPageChange","parseInt","rowsPerPageOptions","axios","create","baseURL","timeout","interceptors","request","use","config","headers","Authorization","localStorage","getItem","Promise","reject","message"],"sourceRoot":""}