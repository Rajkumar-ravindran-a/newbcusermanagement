{"version":3,"file":"static/js/906.f1d05d02.chunk.js","mappings":"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","sources":["component/Model.jsx","component/table/Table.jsx","component/pages/Dashboard.jsx","config/AxiosCofig.js"],"sourcesContent":["import Modal from '@mui/material/Modal';\r\nimport React from 'react'\r\nimport { Box } from '@mui/material';\r\n\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  // width: 400,\r\n  bgcolor: 'background.paper',\r\n  // border: '2px solid #000',\r\n  boxShadow: 24,\r\n  p: 4,\r\n  borderRadius:'1rem'\r\n};\r\n\r\nconst ModelPoper = ({open, handleClose, children}) => {\r\n  return (\r\n    <Modal\r\n    open={open}\r\n    onClose={handleClose}\r\n    aria-labelledby=\"modal-modal-title\"\r\n    aria-describedby=\"modal-modal-description\"\r\n  >\r\n    <Box sx={style}>\r\n     {children}\r\n    </Box>\r\n  </Modal>\r\n  )\r\n}\r\n\r\nexport default ModelPoper","import React, { useState } from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Avatar,\r\n  Button,\r\n  IconButton,\r\n  Pagination,\r\n  Typography,\r\n  TextField,\r\n  Paper,\r\n} from \"@mui/material\";\r\nimport { CiMenuKebab } from \"react-icons/ci\";\r\nimport {\r\n  Dropdown,\r\n  DropdownTrigger,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Chip,\r\n} from \"@nextui-org/react\";\r\n\r\nconst statusColorMap = {\r\n  Active: \"success\",\r\n  paused: \"warning\",\r\n  deleted: \"error\",\r\n};\r\n\r\nexport const columns = [\r\n  { name: \"Name\", key: \"name\" },\r\n  { name: \"User ID\", key: \"id\" },\r\n  { name: \"Role\", key: \"role\" },\r\n  { name: \"Status\", key: \"userStatus\" },\r\n  { name: \"Phone Number\", key: \"phoneNumber\" },\r\n  { name: \"Actions\", key: \"actions\" },\r\n];\r\n\r\nconst TableComponent = ({ Userdata, onUpdateClick, onDeleteClick }) => {\r\n  const [page, setPage] = useState(1);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n\r\n  // Pagination Logic\r\n  const startIndex = (page - 1) * rowsPerPage;\r\n  const endIndex = startIndex + rowsPerPage;\r\n  const paginatedData = Userdata.slice(startIndex, endIndex);\r\n\r\n  const handlePageChange = (event, value) => {\r\n    setPage(value);\r\n  };\r\n\r\n  const renderCell = (user, columnKey) => {\r\n    const cellValue = user[columnKey] || \"N/A\";\r\n\r\n    switch (columnKey) {\r\n      case \"id\":\r\n        return (\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            {user.id}\r\n          </div>\r\n        );\r\n\r\n      case \"name\":\r\n        return (\r\n          <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n            <Avatar\r\n              src={user.avatar}\r\n              alt={user.firstName}\r\n              style={{ marginRight: \"10px\" }}\r\n            >\r\n              {user.firstName?.charAt(0)?.toUpperCase() || \"\"}\r\n            </Avatar>\r\n            <div>\r\n              <Typography variant=\"body1\">\r\n                {user.firstName + \" \" + user.lastName}\r\n              </Typography>\r\n              {/* <Typography variant=\"caption\" color=\"textSecondary\">\r\n                {user.email}\r\n              </Typography> */}\r\n            </div>\r\n          </div>\r\n        );\r\n      case \"role\":\r\n        return (\r\n          <div>\r\n            <Typography variant=\"body1\">{cellValue}</Typography>\r\n            {/* <Typography variant=\"body2\" color=\"textSecondary\">\r\n              {user.team}\r\n            </Typography> */}\r\n          </div>\r\n        );\r\n      case \"userStatus\":\r\n        return (\r\n          <Chip >{cellValue}</Chip>\r\n          // <Typography\r\n          //   variant=\"body2\"\r\n          //   color={statusColorMap[user.userStatus] || \"textSecondary\"} // Dynamically color based on status\r\n          // >\r\n          //   {cellValue}\r\n          // </Typography>\r\n        );\r\n      case \"actions\":\r\n        return (\r\n          <div style={{ display: \"flex\", gap: \"10px\" }}>\r\n            <Dropdown>\r\n              <DropdownTrigger>\r\n                <IconButton>\r\n                  <CiMenuKebab />\r\n                </IconButton>\r\n              </DropdownTrigger>\r\n              <DropdownMenu\r\n                aria-label=\"Action menu\"\r\n                onAction={(key) => {\r\n                  if (key === \"update\") {\r\n                    onUpdateClick(user); // Trigger update for user\r\n                  } else if (key === \"delete\") {\r\n                    onDeleteClick(user.id); // Trigger delete for user\r\n                  }\r\n                }}\r\n              >\r\n                {console.log(\"Action menu \" + user.userStatus)}\r\n                <DropdownItem\r\n                  key=\"update\"\r\n                  isDisabled={user.userStatus === \"Deactive\"}\r\n                >\r\n                  Update Employee\r\n                </DropdownItem>\r\n                <DropdownItem\r\n                  key=\"delete\"\r\n                  isDisabled={user.userStatus === \"Deactive\"}\r\n                >\r\n                  Delete Employee\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </Dropdown>\r\n          </div>\r\n        );\r\n      default:\r\n        return cellValue;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TableContainer>\r\n        <Table sx={{ minWidth: 650 }} aria-label=\"user table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.key}\r\n                  style={{\r\n                    fontWeight: \"300\",\r\n                    // textTransform: \"uppercase\",\r\n                    padding: \"10px 15px\",\r\n                    color:\"#A2A1A8\"\r\n                  }}\r\n                >\r\n                  {column.name}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {paginatedData.length > 0 ? (\r\n              paginatedData.map((user) => (\r\n                <TableRow key={user.id} hover>\r\n                  {columns.map((column) => (\r\n                    <TableCell\r\n                      key={column.key}\r\n                      sx={{\r\n                        padding: \"10px 15px\",\r\n                        height: \"44px\",\r\n                        fontSize: \"16px\",\r\n                        fontWeight: 300\r\n                      }}\r\n                    >\r\n                      {renderCell(user, column.key)}\r\n                    </TableCell>\r\n                  ))}\r\n                </TableRow>\r\n              ))\r\n            ) : (\r\n              <TableRow>\r\n                <TableCell\r\n                  colSpan={columns.length}\r\n                  align=\"center\"\r\n                  style={{ height: \"200px\" }}\r\n                >\r\n                  <Typography variant=\"h6\">No data available</Typography>\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n      {/* Pagination and rows per page control */}\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n          marginTop: \"16px\",\r\n        }}\r\n      >\r\n        <div style={{ display: \"flex\", alignItems: \"center\", gap: \"8px\" }}>\r\n          <Typography variant=\"body2\">Rows per page:</Typography>\r\n          <TextField\r\n            type=\"number\"\r\n            value={rowsPerPage}\r\n            onChange={(e) => setRowsPerPage(parseInt(e.target.value, 10) || 5)}\r\n            style={{ width: \"60px\" }}\r\n            size=\"small\"\r\n          />\r\n        </div>\r\n        <Pagination\r\n          count={Math.ceil(Userdata.length / rowsPerPage)}\r\n          page={page}\r\n          onChange={handlePageChange}\r\n          color=\"primary\"\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TableComponent;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport AdminLayout from \"../layouts/AdminLayout\";\r\nimport TableComponent from \"../table/Table\";\r\nimport {\r\n  TextField,\r\n  Typography,\r\n  Button,\r\n  MenuItem,\r\n  Select,\r\n  InputLabel,\r\n  FormControl,\r\n  InputAdornment,\r\n  IconButton,\r\n  Card,\r\n} from \"@mui/material\";\r\nimport ModelPoper from \"../Model\";\r\nimport { Formik, Field, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { toast } from \"react-toastify\";\r\nimport api from \"../../config/AxiosCofig\";\r\nimport { IoAddCircleOutline, IoSearch } from \"react-icons/io5\";\r\n\r\nconst Dashboard = () => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const [userData, setUserData] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState(\"\"); // State for search query\r\n  const [modelPopup, setModelPopup] = useState(false);\r\n  const [isUpdate, setIsUpdate] = useState(false); // Flag to check if we're in update mode\r\n  const [initialValues, setInitialValues] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    role: \"\",\r\n    password: \"\",\r\n    phonenumber: \"\",\r\n  });\r\n\r\n  // Fetch all users\r\n  const getAllUsers = async () => {\r\n    try {\r\n      const allusers = await api.get(\"/users\", {\r\n        headers: {\r\n          Authorization: `bearer ${token}`,\r\n        },\r\n      });\r\n      if (allusers.status === 200) {\r\n        setUserData(allusers.data);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching users:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllUsers();\r\n  }, []);\r\n\r\n  // Filter users based on search query\r\n  const filteredUsers = userData.filter((user) => {\r\n    const query = searchQuery.toLowerCase();\r\n    return (\r\n      user.firstName.toLowerCase().includes(query) ||\r\n      user.lastName.toLowerCase().includes(query)\r\n    );\r\n  });\r\n\r\n  // Validation schema for form\r\n  const validationSchema = Yup.object({\r\n    firstName: Yup.string().required(\"First Name is required\"),\r\n    lastName: Yup.string().required(\"Last Name is required\"),\r\n    email: Yup.string()\r\n      .email(\"Invalid email format\")\r\n      .required(\"Email is required\"),\r\n    role: Yup.number().required(\"Role is required\"),\r\n    phonenumber: Yup.string().required(\"Mobile number is required\"),\r\n    password: isUpdate\r\n      ? Yup.string().notRequired()\r\n      : Yup.string().required(\"Password is required\"),\r\n  });\r\n\r\n  // Handle modal popup toggle\r\n  const handleModelPopup = (user = null) => {\r\n    if (user) {\r\n      setInitialValues({\r\n        id: user.id,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        email: user.email,\r\n        phonenumber: user.phoneNumber,\r\n        role: user.role === \"Dealer\" ? 2 : 3,\r\n        password: \"\", // Password is optional during update\r\n      });\r\n      setIsUpdate(true); // Indicate update mode\r\n    } else {\r\n      setInitialValues({\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        role: \"\",\r\n        password: \"\",\r\n        phonenumber: \"\",\r\n      });\r\n      setIsUpdate(false); // Indicate create mode\r\n    }\r\n    setModelPopup(true);\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (values) => {\r\n    try {\r\n      console.log(`/updateUser/${values.id}`,\"======\")\r\n      if (isUpdate) {\r\n        // Update user\r\n        const response = await api.put(`/updateUser/${values.id}`, values, {\r\n          headers: {\r\n            Authorization: `bearer ${token}`,\r\n          },\r\n        });\r\n        if (response.status === 200) {\r\n          toast.success(\"User updated successfully\");\r\n          getAllUsers();\r\n          setModelPopup(false);\r\n        }\r\n      } else {\r\n        // Create new user\r\n        const response = await api.post(\"/register\", values, {\r\n          headers: {\r\n            Authorization: `bearer ${token}`,\r\n          },\r\n        });\r\n        if (response.status === 200) {\r\n          toast.success(\"User added successfully\");\r\n          getAllUsers();\r\n          setModelPopup(false);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error submitting user:\", error?.response?.data?.detail);\r\n      toast.error(error?.response?.data?.detail);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (user) => {\r\n      try{\r\n        const response = await api.delete(`/deleteUser/${user}`, {\r\n          headers: {\r\n            Authorization: `bearer ${token}`,\r\n          },\r\n        });\r\n        if(response.status === 200){\r\n          toast.success(\"User deleted successfully\");\r\n          getAllUsers();\r\n        }\r\n      }\r\n      catch(error){\r\n        console.error(\"Error deleting user:\", error);\r\n        toast.error(\"Error deleting user.\");\r\n      }\r\n  }\r\n\r\n  return (\r\n    <AdminLayout pageTitle=\"All users\" pageSubtitle=\"Manage user details\">\r\n      <ModelPoper open={modelPopup} handleClose={() => setModelPopup(false)}>\r\n        <Typography variant=\"h6\" className=\"mb-2\">\r\n          {isUpdate ? \"Update User\" : \"Add User\"}\r\n        </Typography>\r\n        <Formik\r\n          initialValues={initialValues}\r\n          validationSchema={validationSchema}\r\n          onSubmit={handleSubmit}\r\n          enableReinitialize\r\n        >\r\n          {({ errors, touched, setFieldValue }) => (\r\n            <Form>\r\n              <div className=\"flex gap-4 mb-3\">\r\n                <div className=\"flex-1\">\r\n                  <Field\r\n                    name=\"firstName\"\r\n                    as={TextField}\r\n                    label=\"First Name\"\r\n                    placeholder=\"Enter First Name\"\r\n                    fullWidth\r\n                  />\r\n                  {touched.firstName && errors.firstName && (\r\n                    <div className=\"text-red-500 text-sm\">\r\n                      {errors.firstName}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"flex-1\">\r\n                  <Field\r\n                    name=\"lastName\"\r\n                    as={TextField}\r\n                    label=\"Last Name\"\r\n                    placeholder=\"Enter Last Name\"\r\n                    fullWidth\r\n                  />\r\n                  {touched.lastName && errors.lastName && (\r\n                    <div className=\"text-red-500 text-sm\">\r\n                      {errors.lastName}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"mb-3\">\r\n                <Field\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  as={TextField}\r\n                  label=\"Email\"\r\n                  placeholder=\"Enter Your Email\"\r\n                  fullWidth\r\n                  disabled={isUpdate}\r\n                />\r\n                {touched.email && errors.email && (\r\n                  <div className=\"text-red-500 text-sm\">{errors.email}</div>\r\n                )}\r\n              </div>\r\n              <div className=\"mb-3\">\r\n                <Field\r\n                  name=\"phonenumber\"\r\n                  as={TextField}\r\n                  label=\"Phone Number\"\r\n                  placeholder=\"Enter Phone Number\"\r\n                  fullWidth\r\n                />\r\n                {touched.phonenumber && errors.phonenumber && (\r\n                  <div className=\"text-red-500 text-sm\">\r\n                    {errors.phonenumber}\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <div className=\"mb-3\">\r\n                <FormControl fullWidth>\r\n                  <InputLabel>Role</InputLabel>\r\n                  <Field\r\n                    name=\"role\"\r\n                    as={Select}\r\n                    label=\"Role\"\r\n                    onChange={(event) => setFieldValue(\"role\", event.target.value)} // Correctly handle role update\r\n                  >\r\n                    <MenuItem value=\"2\">Dealer</MenuItem>\r\n                    <MenuItem value=\"3\">Trader</MenuItem>\r\n                    {/* Add more roles if needed */}\r\n                  </Field>\r\n                </FormControl>\r\n                {touched.role && errors.role && (\r\n                  <div className=\"text-red-500 text-sm\">{errors.role}</div>\r\n                )}\r\n              </div>\r\n              {!isUpdate && (\r\n                <div className=\"mb-3\">\r\n                  <Field\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    as={TextField}\r\n                    label=\"Password\"\r\n                    placeholder=\"Enter Password\"\r\n                    fullWidth\r\n                  />\r\n                  {touched.password && errors.password && (\r\n                    <div className=\"text-red-500 text-sm\">\r\n                      {errors.password}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              )}\r\n              <div className=\"mt-4 flex gap-4\">\r\n                <Button\r\n                  type=\"submit\"\r\n                  className=\"mr-3 submit-btn\"\r\n                  variant=\"contained\"\r\n                >\r\n                  {isUpdate ? \"Update User\" : \"Add User\"}\r\n                </Button>\r\n                <Button variant=\"outlined\" onClick={() => setModelPopup(false)}>\r\n                  Cancel\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </ModelPoper>\r\n      <Card className=\"p-3 mt-4 userMainCard\">\r\n        <div className=\"flex flex-col flex-1\">\r\n          <div className=\"flex justify-between\">\r\n            <TextField\r\n              className=\"searchUser\"\r\n              placeholder=\"Search\"\r\n              value={searchQuery}\r\n              onChange={(e) => setSearchQuery(e.target.value)}\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <IconButton>\r\n                      <IoSearch />\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n              fullWidth\r\n            />\r\n            <Button\r\n              className=\"h-5 mb-4 addUserButton\"\r\n              onClick={() => handleModelPopup()}\r\n              variant=\"outlined\"\r\n              startIcon={<IoAddCircleOutline />}\r\n            >\r\n              Add New Users\r\n            </Button>\r\n          </div>\r\n          <TableComponent\r\n            Userdata={filteredUsers}\r\n            onUpdateClick={(user) => handleModelPopup(user)} \r\n            onDeleteClick={(user) => handleDelete(user)}\r\n          />\r\n        </div>\r\n      </Card>\r\n    </AdminLayout>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL:'http://43.204.150.47:8000',\r\n  // baseURL:'http://localhost:8000',\r\n  timeout:5000\r\n})\r\n\r\n\r\napi.interceptors.request.use(\r\n  (config)=>{\r\n    config.headers.Authorization = `Bearer ${localStorage.getItem(\"token\")}`;\r\n    return config;\r\n  },\r\n  (error) => {\r\n    // Handle request error\r\n    console.error(\"Request Interceptor Error:\", error);\r\n    return Promise.reject(error);\r\n  }\r\n)\r\n\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    console.log(\"Response Interceptor: Response received\");\r\n    return response;\r\n  },\r\n  (error) => {\r\n    if (error.response && error.response.status === 401) {\r\n      console.error(\"Response Interceptor: Unauthorized access - Redirecting to login\");\r\n    } else {\r\n      console.error(\"Response Interceptor Error:\", error.message);\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api"],"names":["style","position","top","left","transform","bgcolor","boxShadow","p","borderRadius","_ref","open","handleClose","children","_jsx","Modal","onClose","Box","sx","columns","name","key","Userdata","onUpdateClick","onDeleteClick","page","setPage","useState","rowsPerPage","setRowsPerPage","startIndex","endIndex","paginatedData","slice","renderCell","user","columnKey","_user$firstName","_user$firstName$charA","cellValue","display","alignItems","justifyContent","id","_jsxs","Avatar","src","avatar","alt","firstName","marginRight","charAt","toUpperCase","Typography","variant","lastName","Chip","gap","Dropdown","DropdownTrigger","IconButton","CiMenuKebab","DropdownMenu","onAction","console","log","userStatus","DropdownItem","isDisabled","_Fragment","TableContainer","Table","minWidth","TableHead","TableRow","map","column","TableCell","fontWeight","padding","color","TableBody","length","hover","height","fontSize","colSpan","align","marginTop","TextField","type","value","onChange","e","parseInt","target","width","size","Pagination","count","Math","ceil","handlePageChange","event","Dashboard","token","localStorage","getItem","userData","setUserData","searchQuery","setSearchQuery","modelPopup","setModelPopup","isUpdate","setIsUpdate","initialValues","setInitialValues","email","role","password","phonenumber","getAllUsers","async","allusers","api","get","headers","Authorization","concat","status","data","error","useEffect","filteredUsers","filter","query","toLowerCase","includes","validationSchema","Yup","required","notRequired","handleModelPopup","arguments","undefined","phoneNumber","AdminLayout","pageTitle","pageSubtitle","ModelPoper","className","Formik","onSubmit","values","put","toast","success","post","_error$response","_error$response$data","_error$response2","_error$response2$data","response","detail","enableReinitialize","errors","touched","setFieldValue","Form","Field","as","label","placeholder","fullWidth","disabled","FormControl","InputLabel","Select","MenuItem","Button","onClick","Card","InputProps","startAdornment","InputAdornment","IoSearch","startIcon","IoAddCircleOutline","TableComponent","delete","handleDelete","axios","create","baseURL","timeout","interceptors","request","use","config","Promise","reject","message"],"sourceRoot":""}