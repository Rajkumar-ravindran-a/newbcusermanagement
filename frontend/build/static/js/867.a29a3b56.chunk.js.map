{"version":3,"file":"static/js/867.a29a3b56.chunk.js","mappings":"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","sources":["component/popups/BrokerFormPopup.jsx","component/pages/SettingsPage.jsx"],"sourcesContent":["import { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Button, TextField, Typography, Modal, Box } from \"@mui/material\";\r\nimport api from \"../../config/AxiosCofig.js\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n// Validation Schema\r\nconst brokerValidationSchema = Yup.object().shape({\r\n  brokerName: Yup.string().required(\"Broker Name is required\"),\r\n  grossFund: Yup.number()\r\n    .typeError(\"Gross Fund must be a number\")\r\n    .min(0, \"Gross Fund must be greater than or equal to 0\")\r\n    .required(\"Gross Fund is required\"),\r\n  grossFundInterest: Yup.number()\r\n    .typeError(\"Gross Fund Interest must be a number\")\r\n    .min(0, \"Interest must be at least 0%\")\r\n    .max(100, \"Interest cannot exceed 100%\")\r\n    .required(\"Gross Fund Interest is required\"),\r\n  grossFundSharing: Yup.number()\r\n    .typeError(\"Gross Fund Sharing must be a number\")\r\n    .min(0, \"Sharing must be at least 0%\")\r\n    .max(100, \"Sharing cannot exceed 100%\")\r\n    .required(\"Gross Fund Sharing is required\"),\r\n\r\n  arbitrageFund: Yup.number()\r\n    .typeError(\"Arbitrage Fund must be a number\")\r\n    .min(0, \"Arbitrage Fund must be greater than or equal to 0\")\r\n    .required(\"Arbitrage Fund is required\"),\r\n  arbitrageFundInterest: Yup.number()\r\n    .typeError(\"Arbitrage Fund Interest must be a number\")\r\n    .min(0, \"Interest must be at least 0%\")\r\n    .max(100, \"Interest cannot exceed 100%\")\r\n    .required(\"Arbitrage Fund Interest is required\"),\r\n  arbitrageFundSharing: Yup.number()\r\n    .typeError(\"Arbitrage Fund Sharing must be a number\")\r\n    .min(0, \"Sharing must be at least 0%\")\r\n    .max(100, \"Sharing cannot exceed 100%\")\r\n    .required(\"Arbitrage Fund Sharing is required\"),\r\n\r\n  propFund: Yup.number()\r\n    .typeError(\"Prop Fund must be a number\")\r\n    .min(0, \"Prop Fund must be greater than or equal to 0\")\r\n    .required(\"Prop Fund is required\"),\r\n  propFundInterest: Yup.number()\r\n    .typeError(\"Prop Fund Interest must be a number\")\r\n    .min(0, \"Interest must be at least 0%\")\r\n    .max(100, \"Interest cannot exceed 100%\")\r\n    .required(\"Prop Fund Interest is required\"),\r\n  propFundSharing: Yup.number()\r\n    .typeError(\"Prop Fund Sharing must be a number\")\r\n    .min(0, \"Sharing must be at least 0%\")\r\n    .max(100, \"Sharing cannot exceed 100%\")\r\n    .required(\"Prop Fund Sharing is required\"),\r\n\r\n  costPerCr: Yup.number()\r\n    .typeError(\"Cost must be a number\")\r\n    .min(0, \"Cost must be greater than or equal to 0\")\r\n    .required(\"Cost is required\"),\r\n});\r\n\r\n// Broker Form Popup Component\r\nconst BrokerFormPopup = ({ open, handleClose, onFormSubmit, brokerData }) => {\r\n  const initialValues = {\r\n    id: brokerData?.id || null,\r\n    brokerName: brokerData?.brokerName || \"\",\r\n    grossFund: brokerData?.grossFund || 0,\r\n    grossFundInterest: brokerData?.grossFundInterest || 0,\r\n    grossFundSharing: brokerData?.grossFundSharing || 0,\r\n    arbitrageFund: brokerData?.arbitrageFund || 0,\r\n    arbitrageFundInterest: brokerData?.arbitrageFundInterest || 0,\r\n    arbitrageFundSharing: brokerData?.arbitrageFundSharing || 0,\r\n    propFund: brokerData?.propFund || 0,\r\n    propFundInterest: brokerData?.propFundInterest || 0,\r\n    propFundSharing: brokerData?.propFundSharing || 0,\r\n    costPerCr: brokerData?.costPerCr || 0,\r\n  };\r\n\r\n  const handleSubmit = async (values, { resetForm }) => {\r\n    try {\r\n      if (values.id) {\r\n        await api.put(`/updateBroker/${values.id}`, values);\r\n        toast.success(\"Broker updated successfully.\");\r\n      } else {\r\n        await api.post(\"/createBroker\", values);\r\n        toast.success(\"Broker added successfully.\");\r\n      }\r\n      onFormSubmit();\r\n      resetForm();\r\n      handleClose();\r\n    } catch (error) {\r\n      console.error(error?.response?.data);\r\n      toast.error(error?.response?.data?.detail || \"An error occurred.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal open={open} onClose={handleClose}>\r\n      <Box\r\n        sx={{\r\n          position: \"absolute\",\r\n          top: \"50%\",\r\n          left: \"50%\",\r\n          transform: \"translate(-50%, -50%)\",\r\n          width: 600,\r\n          bgcolor: \"background.paper\",\r\n          boxShadow: 24,\r\n          p: 4,\r\n          borderRadius: 2,\r\n          overflowY: \"auto\",\r\n        }}\r\n      >\r\n        <Typography variant=\"h6\" sx={{ marginBottom: \"20px\" }}>\r\n          {initialValues.id ? \"Update Broker\" : \"Add Broker\"}\r\n        </Typography>\r\n\r\n        <Formik\r\n          initialValues={initialValues}\r\n          validationSchema={brokerValidationSchema}\r\n          onSubmit={handleSubmit}\r\n          enableReinitialize\r\n        >\r\n          {({ values, errors, touched, handleChange, handleBlur, setFieldValue }) => (\r\n            <Form>\r\n              <div className=\"flex flex-col gap-4\">\r\n                {/* Broker Name */}\r\n                <TextField\r\n                  name=\"brokerName\"\r\n                  label=\"Broker Name\"\r\n                  value={values.brokerName} // Force uppercase\r\n                  onChange={(e) => {\r\n                    const uppercaseValue = e.target.value.toUpperCase();\r\n                    setFieldValue(\"brokerName\", uppercaseValue); // Set uppercase value in Formik\r\n                  }}\r\n                  onBlur={handleBlur}\r\n                  error={touched.brokerName && Boolean(errors.brokerName)}\r\n                  helperText={touched.brokerName && errors.brokerName}\r\n                  fullWidth\r\n                  inputProps={{ style: { textTransform: \"uppercase\" } }} // Ensure UI displays uppercase\r\n                />\r\n\r\n                {/* Gross Fund */}\r\n                <div className=\"flex gap-4\">\r\n                  <TextField\r\n                    name=\"grossFund\"\r\n                    label=\"Gross Fund (1Cr)\"\r\n                    value={values.grossFund}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    error={touched.grossFund && Boolean(errors.grossFund)}\r\n                    helperText={touched.grossFund && errors.grossFund}\r\n                    fullWidth\r\n                  />\r\n                  <TextField\r\n                    name=\"grossFundInterest\"\r\n                    label=\"Interest (%)\"\r\n                    value={values.grossFundInterest}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    error={\r\n                      touched.grossFundInterest &&\r\n                      Boolean(errors.grossFundInterest)\r\n                    }\r\n                    helperText={\r\n                      touched.grossFundInterest && errors.grossFundInterest\r\n                    }\r\n                    fullWidth\r\n                  />\r\n                  <TextField\r\n                    name=\"grossFundSharing\"\r\n                    label=\"Sharing (%)\"\r\n                    value={values.grossFundSharing}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    error={\r\n                      touched.grossFundSharing &&\r\n                      Boolean(errors.grossFundSharing)\r\n                    }\r\n                    helperText={\r\n                      touched.grossFundSharing && errors.grossFundSharing\r\n                    }\r\n                    fullWidth\r\n                  />\r\n                </div>\r\n\r\n                {/* Arbitrage Fund */}\r\n                <div className=\"flex gap-4\">\r\n                  <TextField\r\n                    name=\"arbitrageFund\"\r\n                    label=\"Arbitrage Fund (1Cr)\"\r\n                    value={values.arbitrageFund}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    error={\r\n                      touched.arbitrageFund && Boolean(errors.arbitrageFund)\r\n                    }\r\n                    helperText={touched.arbitrageFund && errors.arbitrageFund}\r\n                    fullWidth\r\n                  />\r\n                  <TextField\r\n                    name=\"arbitrageFundInterest\"\r\n                    label=\"Interest (%)\"\r\n                    value={values.arbitrageFundInterest}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    error={\r\n                      touched.arbitrageFundInterest &&\r\n                      Boolean(errors.arbitrageFundInterest)\r\n                    }\r\n                    helperText={\r\n                      touched.arbitrageFundInterest &&\r\n                      errors.arbitrageFundInterest\r\n                    }\r\n                    fullWidth\r\n                  />\r\n                  <TextField\r\n                    name=\"arbitrageFundSharing\"\r\n                    label=\"Sharing (%)\"\r\n                    value={values.arbitrageFundSharing}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    error={\r\n                      touched.arbitrageFundSharing &&\r\n                      Boolean(errors.arbitrageFundSharing)\r\n                    }\r\n                    helperText={\r\n                      touched.arbitrageFundSharing &&\r\n                      errors.arbitrageFundSharing\r\n                    }\r\n                    fullWidth\r\n                  />\r\n                </div>\r\n\r\n                {/* Prop Fund */}\r\n                <div className=\"flex gap-4\">\r\n                  <TextField\r\n                    name=\"propFund\"\r\n                    label=\"Prop Fund (1Cr)\"\r\n                    value={values.propFund}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    error={touched.propFund && Boolean(errors.propFund)}\r\n                    helperText={touched.propFund && errors.propFund}\r\n                    fullWidth\r\n                  />\r\n                  <TextField\r\n                    name=\"propFundInterest\"\r\n                    label=\"Interest (%)\"\r\n                    value={values.propFundInterest}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    error={\r\n                      touched.propFundInterest &&\r\n                      Boolean(errors.propFundInterest)\r\n                    }\r\n                    helperText={\r\n                      touched.propFundInterest && errors.propFundInterest\r\n                    }\r\n                    fullWidth\r\n                  />\r\n                  <TextField\r\n                    name=\"propFundSharing\"\r\n                    label=\"Sharing (%)\"\r\n                    value={values.propFundSharing}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    error={\r\n                      touched.propFundSharing && Boolean(errors.propFundSharing)\r\n                    }\r\n                    helperText={\r\n                      touched.propFundSharing && errors.propFundSharing\r\n                    }\r\n                    fullWidth\r\n                  />\r\n                </div>\r\n\r\n                {/* Cost Per Cr */}\r\n                <TextField\r\n                  name=\"costPerCr\"\r\n                  label=\"Cost Per Cr\"\r\n                  value={values.costPerCr}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  error={touched.costPerCr && Boolean(errors.costPerCr)}\r\n                  helperText={touched.costPerCr && errors.costPerCr}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n\r\n                {/* Action Buttons */}\r\n                <div className=\"flex justify-end gap-4 mt-4\">\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={handleClose}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                  <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                    {initialValues.id ? \"Update Broker\" : \"Add Broker\"}\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Box>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default BrokerFormPopup;\r\n","import { useState, useEffect, useCallback } from \"react\";\r\nimport { Button, TextField, IconButton } from \"@mui/material\";\r\nimport CustomTable from \"../table/CustomTable.jsx\";\r\nimport AdminLayout from \"../layouts/AdminLayout.jsx\";\r\nimport api from \"../../config/AxiosCofig.js\";\r\nimport { toast } from \"react-toastify\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport BrokerFormPopup from \"../popups/BrokerFormPopup.jsx\";\r\nimport { Card } from \"@nextui-org/react\";\r\nimport { IoSearch, IoAddCircleOutline } from \"react-icons/io5\";\r\nimport { CiMenuKebab } from \"react-icons/ci\";\r\nimport {\r\n  Dropdown,\r\n  DropdownTrigger,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n} from \"@nextui-org/react\";\r\n\r\n// Column Titles\r\n// const brokerTableTitle = [\r\n//   \"Broker Name\",\r\n//   \"Start Date\",\r\n//   \"Release Date\",\r\n//   \"Gross Fund\",\r\n//   \"Arbitrage Fund\",\r\n//   \"Total Fund\",\r\n//   \"Prop Fund\",\r\n//   \"Action\",\r\n// ];\r\n\r\nconst brokerTableTitle = [\r\n  \"BrokerName\",\r\n  \"GrossFund\",\r\n  \"ArbitrageFund\",\r\n  \"PropFund\",\r\n  // \"Interest\",\r\n  // \"Sharing\",\r\n  \"CostPerCr\",\r\n  \"Total Fund\",\r\n  // \"Start Date\",\r\n  // \"Realease Date\",\r\n  \"Action\",\r\n];\r\n\r\nconst AdminSettings = () => {\r\n  const [brokerData, setBrokerData] = useState([]);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [loader, setLoader] = useState(false);\r\n  const [selectedBroker, setSelectedBroker] = useState(null);\r\n\r\n  // Fetch Brokers Data\r\n  const getBrokerData = useCallback(async () => {\r\n    setLoader(true);\r\n    try {\r\n      const response = await api.get(\"/getAllBroker\");\r\n      if (response.status === 200) {\r\n        const formattedData = response.data?.data?.map((broker) => ({\r\n          \"Broker Name\": broker.brokerName,\r\n          \"Gross Fund\":\r\n            broker.grossFund !== undefined\r\n              ? `I ${broker.grossFundInterest} | F ${broker.grossFund} | S ${broker.grossFundSharing}`\r\n              : \"-\",\r\n\r\n          // Arbitrage Fund (Merged: Fund | Interest | Sharing)\r\n          \"Arbitrage Fund\":\r\n            broker.arbitrageFund !== undefined\r\n              ? `I ${broker.arbitrageFundInterest} | F ${broker.arbitrageFund} | S ${broker.arbitrageFundSharing}`\r\n              : \"-\",\r\n\r\n          // Prop Fund (Merged: Fund | Interest | Sharing)\r\n          \"Prop Fund\":\r\n            broker.propFund !== undefined\r\n              ? `I ${broker.propFundInterest} | F ${broker.propFund} | S ${broker.propFundSharing}`\r\n              : \"-\",\r\n\r\n          \"Cost Per Cr\": broker.costPerCr || \"-\",\r\n\r\n          // Total Fund Calculation (Summing all fund values)\r\n          \"Total Fund\":\r\n            broker.grossFund !== undefined &&\r\n            broker.arbitrageFund !== undefined &&\r\n            broker.propFund !== undefined\r\n              ? broker.grossFund + broker.arbitrageFund + broker.propFund\r\n              : \"-\",\r\n\r\n          // \"Start Date\": broker.startDate || \"-\",\r\n          // \"Release Date\": broker.releaseDate || \"-\",\r\n\r\n          Action: (\r\n            <Dropdown>\r\n              <DropdownTrigger>\r\n                <IconButton>\r\n                  <CiMenuKebab />\r\n                </IconButton>\r\n              </DropdownTrigger>\r\n              <DropdownMenu\r\n                aria-label=\"Action menu\"\r\n                onAction={(key) => handleDropdownAction(key, broker)}\r\n              >\r\n                <DropdownItem key=\"release\" isDisabled={broker.status === 3}>\r\n                  Release\r\n                </DropdownItem>\r\n                <DropdownItem key=\"edit\" isDisabled={broker.status === 3}>\r\n                  Edit\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </Dropdown>\r\n          ),\r\n        }));\r\n        setBrokerData(formattedData);\r\n      } else {\r\n        toast.error(\"Failed to fetch broker data.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.error(\"Error fetching broker data.\");\r\n    } finally {\r\n      setLoader(false);\r\n    }\r\n  }, []);\r\n\r\n  // Handle Dropdown Actions\r\n  const handleDropdownAction = (action, broker) => {\r\n    if (action === \"release\") {\r\n      releaseBroker(broker);\r\n    } else if (action === \"edit\") {\r\n      setSelectedBroker(broker);\r\n      setAnchorEl(document.body);\r\n    }\r\n  };\r\n\r\n  // Release Broker\r\n  const releaseBroker = async (broker) => {\r\n    try {\r\n      const response = await api.put(`/releaseBroker/${broker.id}/3`);\r\n      if (response.status === 200) {\r\n        toast.success(`Broker \"${broker.brokerName}\" released successfully.`);\r\n        getBrokerData();\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.error(\"Error releasing broker.\");\r\n    }\r\n  };\r\n\r\n  // Open and Close Popover\r\n  const handleClickPopover = (event) => setAnchorEl(event.currentTarget);\r\n  const handleClosePopover = () => {\r\n    setAnchorEl(null);\r\n    setSelectedBroker(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBrokerData();\r\n  }, [getBrokerData]);\r\n\r\n  return (\r\n    <AdminLayout\r\n      pageTitle=\"Brokers\"\r\n      pageSubtitle=\"Add, view, and release brokers\"\r\n    >\r\n      <Card\r\n        className=\"settings-mainCard\"\r\n        style={{ marginTop: \"1rem\", width: \"100%\", overflowY: \"scroll\" }}\r\n      >\r\n        <div className=\"flex justify-between p-2 align-middle broker-form\">\r\n          <TextField\r\n            className=\"searchUser\"\r\n            placeholder=\"Search\"\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <IoSearch />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleClickPopover}\r\n            startIcon={<IoAddCircleOutline />}\r\n          >\r\n            Add Broker\r\n          </Button>\r\n        </div>\r\n\r\n        <BrokerFormPopup\r\n          anchorEl={anchorEl}\r\n          open={Boolean(anchorEl)}\r\n          handleClose={handleClosePopover}\r\n          onFormSubmit={getBrokerData}\r\n          brokerData={selectedBroker}\r\n        />\r\n\r\n        <div className=\"mt-4\">\r\n          <CustomTable\r\n            columnWidths={[\r\n              \"10%\",\r\n              \"10%\",\r\n              \"10%\",\r\n              \"10%\",\r\n              \"15%\",\r\n              \"10%\",\r\n              \"10%\",\r\n              \"10%\",\r\n              \"40%\",\r\n              \"15%\",\r\n              \"10%\",\r\n            ]}\r\n            title={brokerTableTitle}\r\n            tableData={brokerData}\r\n            loading={loader}\r\n          />\r\n        </div>\r\n      </Card>\r\n    </AdminLayout>\r\n  );\r\n};\r\n\r\nexport default AdminSettings;\r\n"],"names":["brokerValidationSchema","Yup","shape","brokerName","required","grossFund","typeError","min","grossFundInterest","max","grossFundSharing","arbitrageFund","arbitrageFundInterest","arbitrageFundSharing","propFund","propFundInterest","propFundSharing","costPerCr","_ref","open","handleClose","onFormSubmit","brokerData","initialValues","id","_jsx","Modal","onClose","children","_jsxs","Box","sx","position","top","left","transform","width","bgcolor","boxShadow","p","borderRadius","overflowY","Typography","variant","marginBottom","Formik","validationSchema","onSubmit","async","values","_ref2","resetForm","api","put","concat","toast","success","post","error","_error$response","_error$response2","_error$response2$data","console","response","data","detail","enableReinitialize","_ref3","errors","touched","handleChange","handleBlur","setFieldValue","Form","className","TextField","name","label","value","onChange","e","uppercaseValue","target","toUpperCase","onBlur","Boolean","helperText","fullWidth","inputProps","style","textTransform","margin","Button","color","onClick","type","brokerTableTitle","AdminSettings","setBrokerData","useState","anchorEl","setAnchorEl","loader","setLoader","selectedBroker","setSelectedBroker","getBrokerData","useCallback","get","status","_response$data","_response$data$data","formattedData","map","broker","undefined","Action","Dropdown","DropdownTrigger","IconButton","CiMenuKebab","DropdownMenu","onAction","key","handleDropdownAction","DropdownItem","isDisabled","action","releaseBroker","document","body","useEffect","AdminLayout","pageTitle","pageSubtitle","Card","marginTop","placeholder","InputProps","startAdornment","InputAdornment","IoSearch","event","currentTarget","startIcon","IoAddCircleOutline","BrokerFormPopup","handleClosePopover","CustomTable","columnWidths","title","tableData","loading"],"sourceRoot":""}